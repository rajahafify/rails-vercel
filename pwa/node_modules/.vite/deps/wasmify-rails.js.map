{
  "version": 3,
  "sources": ["../../set-cookie-parser/lib/set-cookie.js", "../../wasmify-rails/src/progress.js", "../../@ruby/wasm-wasi/dist/esm/bindgen/legacy/intrinsics.js", "../../@ruby/wasm-wasi/dist/esm/bindgen/legacy/rb-abi-guest.js", "../../@ruby/wasm-wasi/dist/esm/bindgen/legacy/rb-js-abi-host.js", "../../@ruby/wasm-wasi/dist/esm/binding.js", "../../@ruby/wasm-wasi/dist/esm/vm.js", "../../@bjorn3/browser_wasi_shim/dist/wasi_defs.js", "../../@bjorn3/browser_wasi_shim/dist/debug.js", "../../@bjorn3/browser_wasi_shim/dist/wasi.js", "../../@bjorn3/browser_wasi_shim/dist/fd.js", "../../@bjorn3/browser_wasi_shim/dist/fs_mem.js", "../../wasmify-rails/src/vm.js", "../../wasmify-rails/src/rack.js", "../../wasmify-rails/src/active_record.js"],
  "sourcesContent": ["\"use strict\";\n\nvar defaultParseOptions = {\n  decodeValues: true,\n  map: false,\n  silent: false,\n};\n\nfunction isNonEmptyString(str) {\n  return typeof str === \"string\" && !!str.trim();\n}\n\nfunction parseString(setCookieValue, options) {\n  var parts = setCookieValue.split(\";\").filter(isNonEmptyString);\n\n  var nameValuePairStr = parts.shift();\n  var parsed = parseNameValuePair(nameValuePairStr);\n  var name = parsed.name;\n  var value = parsed.value;\n\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  try {\n    value = options.decodeValues ? decodeURIComponent(value) : value; // decode cookie value\n  } catch (e) {\n    console.error(\n      \"set-cookie-parser encountered an error while decoding a cookie with value '\" +\n        value +\n        \"'. Set options.decodeValues to false to disable this feature.\",\n      e\n    );\n  }\n\n  var cookie = {\n    name: name,\n    value: value,\n  };\n\n  parts.forEach(function (part) {\n    var sides = part.split(\"=\");\n    var key = sides.shift().trimLeft().toLowerCase();\n    var value = sides.join(\"=\");\n    if (key === \"expires\") {\n      cookie.expires = new Date(value);\n    } else if (key === \"max-age\") {\n      cookie.maxAge = parseInt(value, 10);\n    } else if (key === \"secure\") {\n      cookie.secure = true;\n    } else if (key === \"httponly\") {\n      cookie.httpOnly = true;\n    } else if (key === \"samesite\") {\n      cookie.sameSite = value;\n    } else if (key === \"partitioned\") {\n      cookie.partitioned = true;\n    } else {\n      cookie[key] = value;\n    }\n  });\n\n  return cookie;\n}\n\nfunction parseNameValuePair(nameValuePairStr) {\n  // Parses name-value-pair according to rfc6265bis draft\n\n  var name = \"\";\n  var value = \"\";\n  var nameValueArr = nameValuePairStr.split(\"=\");\n  if (nameValueArr.length > 1) {\n    name = nameValueArr.shift();\n    value = nameValueArr.join(\"=\"); // everything after the first =, joined by a \"=\" if there was more than one part\n  } else {\n    value = nameValuePairStr;\n  }\n\n  return { name: name, value: value };\n}\n\nfunction parse(input, options) {\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  if (!input) {\n    if (!options.map) {\n      return [];\n    } else {\n      return {};\n    }\n  }\n\n  if (input.headers) {\n    if (typeof input.headers.getSetCookie === \"function\") {\n      // for fetch responses - they combine headers of the same type in the headers array,\n      // but getSetCookie returns an uncombined array\n      input = input.headers.getSetCookie();\n    } else if (input.headers[\"set-cookie\"]) {\n      // fast-path for node.js (which automatically normalizes header names to lower-case\n      input = input.headers[\"set-cookie\"];\n    } else {\n      // slow-path for other environments - see #25\n      var sch =\n        input.headers[\n          Object.keys(input.headers).find(function (key) {\n            return key.toLowerCase() === \"set-cookie\";\n          })\n        ];\n      // warn if called on a request-like object with a cookie header rather than a set-cookie header - see #34, 36\n      if (!sch && input.headers.cookie && !options.silent) {\n        console.warn(\n          \"Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.\"\n        );\n      }\n      input = sch;\n    }\n  }\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  if (!options.map) {\n    return input.filter(isNonEmptyString).map(function (str) {\n      return parseString(str, options);\n    });\n  } else {\n    var cookies = {};\n    return input.filter(isNonEmptyString).reduce(function (cookies, str) {\n      var cookie = parseString(str, options);\n      cookies[cookie.name] = cookie;\n      return cookies;\n    }, cookies);\n  }\n}\n\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n\n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/\nfunction splitCookiesString(cookiesString) {\n  if (Array.isArray(cookiesString)) {\n    return cookiesString;\n  }\n  if (typeof cookiesString !== \"string\") {\n    return [];\n  }\n\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        // ',' is a cookie separator if we have later first '=', not ';' or ','\n        lastComma = pos;\n        pos += 1;\n\n        skipWhitespace();\n        nextStart = pos;\n\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n\n        // currently special character\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          // we found cookies separator\n          cookiesSeparatorFound = true;\n          // pos is inside the next cookie, so back up and return it.\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          // in param ',' or param separator ';',\n          // we continue from that comma\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n\n  return cookiesStrings;\n}\n\nmodule.exports = parse;\nmodule.exports.parse = parse;\nmodule.exports.parseString = parseString;\nmodule.exports.splitCookiesString = splitCookiesString;\n", "export class Progress {\n  constructor() {\n    this.listeners = new Set();\n    this.currentStep = \"Initializing...\";\n    this.currentValue = 0;\n  }\n\n  async attach(worker) {\n    const clients = await worker.clients.matchAll({\n      includeUncontrolled: true,\n    });\n    for (const client of clients) {\n      this.addListener(client);\n    }\n  }\n\n  addListener(listener) {\n    this.listeners.add(listener);\n  }\n\n  removeListener(listener) {\n    this.listeners.delete(listener);\n  }\n\n  notifyProgress() {\n    for (const listener of this.listeners) {\n      listener.postMessage({\n        type: \"progress\",\n        step: this.currentStep,\n        value: this.currentValue,\n      });\n    }\n  }\n\n  notify(message) {\n    for (const listener of this.listeners) {\n      listener.postMessage({ type: \"console\", message });\n    }\n  }\n\n  updateStep(step) {\n    this.currentStep = step;\n    this.currentValue = 0;\n    this.notifyProgress();\n  }\n\n  updateProgress(value) {\n    this.currentValue = value;\n    this.notifyProgress();\n  }\n}\n", "let DATA_VIEW = new DataView(new ArrayBuffer());\nexport function data_view(mem) {\n    if (DATA_VIEW.buffer !== mem.buffer)\n        DATA_VIEW = new DataView(mem.buffer);\n    return DATA_VIEW;\n}\nexport function to_uint32(val) {\n    return val >>> 0;\n}\nexport const UTF8_DECODER = new TextDecoder('utf-8');\nconst UTF8_ENCODER = new TextEncoder('utf-8');\nexport function utf8_encode(s, realloc, memory) {\n    if (typeof s !== 'string')\n        throw new TypeError('expected a string');\n    if (s.length === 0) {\n        UTF8_ENCODED_LEN = 0;\n        return 1;\n    }\n    let alloc_len = 0;\n    let ptr = 0;\n    let writtenTotal = 0;\n    while (s.length > 0) {\n        ptr = realloc(ptr, alloc_len, 1, alloc_len + s.length);\n        alloc_len += s.length;\n        const { read, written } = UTF8_ENCODER.encodeInto(s, new Uint8Array(memory.buffer, ptr + writtenTotal, alloc_len - writtenTotal));\n        writtenTotal += written;\n        s = s.slice(read);\n    }\n    if (alloc_len > writtenTotal)\n        ptr = realloc(ptr, alloc_len, 1, writtenTotal);\n    UTF8_ENCODED_LEN = writtenTotal;\n    return ptr;\n}\nexport let UTF8_ENCODED_LEN = 0;\nexport class Slab {\n    constructor() {\n        this.list = [];\n        this.head = 0;\n    }\n    insert(val) {\n        if (this.head >= this.list.length) {\n            this.list.push({\n                next: this.list.length + 1,\n                val: undefined,\n            });\n        }\n        const ret = this.head;\n        const slot = this.list[ret];\n        this.head = slot.next;\n        slot.next = -1;\n        slot.val = val;\n        return ret;\n    }\n    get(idx) {\n        if (idx >= this.list.length)\n            throw new RangeError('handle index not valid');\n        const slot = this.list[idx];\n        if (slot.next === -1)\n            return slot.val;\n        throw new RangeError('handle index not valid');\n    }\n    remove(idx) {\n        const ret = this.get(idx); // validate the slot\n        const slot = this.list[idx];\n        slot.val = undefined;\n        slot.next = this.head;\n        this.head = idx;\n        return ret;\n    }\n}\nexport function throw_invalid_bool() {\n    throw new RangeError(\"invalid variant discriminant for bool\");\n}\n", "import { data_view, to_uint32, UTF8_DECODER, utf8_encode, UTF8_ENCODED_LEN, Slab, throw_invalid_bool } from './intrinsics.js';\nexport class RbAbiGuest {\n    constructor() {\n        this._resource0_slab = new Slab();\n    }\n    addToImports(imports) {\n        if (!(\"canonical_abi\" in imports))\n            imports[\"canonical_abi\"] = {};\n        imports.canonical_abi['resource_drop_rb-abi-value'] = i => {\n            this._resource0_slab.remove(i).drop();\n        };\n        imports.canonical_abi['resource_clone_rb-abi-value'] = i => {\n            const obj = this._resource0_slab.get(i);\n            return this._resource0_slab.insert(obj.clone());\n        };\n        imports.canonical_abi['resource_get_rb-abi-value'] = i => {\n            return this._resource0_slab.get(i)._wasm_val;\n        };\n        imports.canonical_abi['resource_new_rb-abi-value'] = i => {\n            const registry = this._registry0;\n            return this._resource0_slab.insert(new RbAbiValue(i, this));\n        };\n    }\n    async instantiate(module, imports) {\n        imports = imports || {};\n        this.addToImports(imports);\n        if (module instanceof WebAssembly.Instance) {\n            this.instance = module;\n        }\n        else if (module instanceof WebAssembly.Module) {\n            this.instance = await WebAssembly.instantiate(module, imports);\n        }\n        else if (module instanceof ArrayBuffer || module instanceof Uint8Array) {\n            const { instance } = await WebAssembly.instantiate(module, imports);\n            this.instance = instance;\n        }\n        else {\n            const { instance } = await WebAssembly.instantiateStreaming(module, imports);\n            this.instance = instance;\n        }\n        this._exports = this.instance.exports;\n        this._registry0 = new FinalizationRegistry(this._exports['canonical_abi_drop_rb-abi-value']);\n    }\n    rubyShowVersion() {\n        this._exports['ruby-show-version: func() -> ()']();\n    }\n    rubyInit(arg0) {\n        const memory = this._exports.memory;\n        const realloc = this._exports[\"cabi_realloc\"];\n        const vec1 = arg0;\n        const len1 = vec1.length;\n        const result1 = realloc(0, 0, 4, len1 * 8);\n        for (let i = 0; i < vec1.length; i++) {\n            const e = vec1[i];\n            const base = result1 + i * 8;\n            const ptr0 = utf8_encode(e, realloc, memory);\n            const len0 = UTF8_ENCODED_LEN;\n            data_view(memory).setInt32(base + 4, len0, true);\n            data_view(memory).setInt32(base + 0, ptr0, true);\n        }\n        this._exports['ruby-init: func(args: list<string>) -> ()'](result1, len1);\n    }\n    rubyInitLoadpath() {\n        this._exports['ruby-init-loadpath: func() -> ()']();\n    }\n    rbEvalStringProtect(arg0) {\n        const memory = this._exports.memory;\n        const realloc = this._exports[\"cabi_realloc\"];\n        const ptr0 = utf8_encode(arg0, realloc, memory);\n        const len0 = UTF8_ENCODED_LEN;\n        const ret = this._exports['rb-eval-string-protect: func(str: string) -> tuple<handle<rb-abi-value>, s32>'](ptr0, len0);\n        return [this._resource0_slab.remove(data_view(memory).getInt32(ret + 0, true)), data_view(memory).getInt32(ret + 4, true)];\n    }\n    rbFuncallvProtect(arg0, arg1, arg2) {\n        const memory = this._exports.memory;\n        const realloc = this._exports[\"cabi_realloc\"];\n        const obj0 = arg0;\n        if (!(obj0 instanceof RbAbiValue))\n            throw new TypeError('expected instance of RbAbiValue');\n        const vec2 = arg2;\n        const len2 = vec2.length;\n        const result2 = realloc(0, 0, 4, len2 * 4);\n        for (let i = 0; i < vec2.length; i++) {\n            const e = vec2[i];\n            const base = result2 + i * 4;\n            const obj1 = e;\n            if (!(obj1 instanceof RbAbiValue))\n                throw new TypeError('expected instance of RbAbiValue');\n            data_view(memory).setInt32(base + 0, this._resource0_slab.insert(obj1.clone()), true);\n        }\n        const ret = this._exports['rb-funcallv-protect: func(recv: handle<rb-abi-value>, mid: u32, args: list<handle<rb-abi-value>>) -> tuple<handle<rb-abi-value>, s32>'](this._resource0_slab.insert(obj0.clone()), to_uint32(arg1), result2, len2);\n        return [this._resource0_slab.remove(data_view(memory).getInt32(ret + 0, true)), data_view(memory).getInt32(ret + 4, true)];\n    }\n    rbIntern(arg0) {\n        const memory = this._exports.memory;\n        const realloc = this._exports[\"cabi_realloc\"];\n        const ptr0 = utf8_encode(arg0, realloc, memory);\n        const len0 = UTF8_ENCODED_LEN;\n        const ret = this._exports['rb-intern: func(name: string) -> u32'](ptr0, len0);\n        return ret >>> 0;\n    }\n    rbErrinfo() {\n        const ret = this._exports['rb-errinfo: func() -> handle<rb-abi-value>']();\n        return this._resource0_slab.remove(ret);\n    }\n    rbClearErrinfo() {\n        this._exports['rb-clear-errinfo: func() -> ()']();\n    }\n    rstringPtr(arg0) {\n        const memory = this._exports.memory;\n        const obj0 = arg0;\n        if (!(obj0 instanceof RbAbiValue))\n            throw new TypeError('expected instance of RbAbiValue');\n        const ret = this._exports['rstring-ptr: func(value: handle<rb-abi-value>) -> string'](this._resource0_slab.insert(obj0.clone()));\n        const ptr1 = data_view(memory).getInt32(ret + 0, true);\n        const len1 = data_view(memory).getInt32(ret + 4, true);\n        const result1 = UTF8_DECODER.decode(new Uint8Array(memory.buffer, ptr1, len1));\n        this._exports[\"cabi_post_rstring-ptr\"](ret);\n        return result1;\n    }\n    rbVmBugreport() {\n        this._exports['rb-vm-bugreport: func() -> ()']();\n    }\n    rbGcEnable() {\n        const ret = this._exports['rb-gc-enable: func() -> bool']();\n        const bool0 = ret;\n        return bool0 == 0 ? false : (bool0 == 1 ? true : throw_invalid_bool());\n    }\n    rbGcDisable() {\n        const ret = this._exports['rb-gc-disable: func() -> bool']();\n        const bool0 = ret;\n        return bool0 == 0 ? false : (bool0 == 1 ? true : throw_invalid_bool());\n    }\n    rbSetShouldProhibitRewind(arg0) {\n        const ret = this._exports['rb-set-should-prohibit-rewind: func(new-value: bool) -> bool'](arg0 ? 1 : 0);\n        const bool0 = ret;\n        return bool0 == 0 ? false : (bool0 == 1 ? true : throw_invalid_bool());\n    }\n}\nexport class RbAbiValue {\n    constructor(wasm_val, obj) {\n        this._wasm_val = wasm_val;\n        this._obj = obj;\n        this._refcnt = 1;\n        obj._registry0.register(this, wasm_val, this);\n    }\n    clone() {\n        this._refcnt += 1;\n        return this;\n    }\n    drop() {\n        this._refcnt -= 1;\n        if (this._refcnt !== 0)\n            return;\n        this._obj._registry0.unregister(this);\n        const dtor = this._obj._exports['canonical_abi_drop_rb-abi-value'];\n        const wasm_val = this._wasm_val;\n        delete this._obj;\n        delete this._refcnt;\n        delete this._wasm_val;\n        dtor(wasm_val);\n    }\n}\n", "import { data_view, UTF8_DECODER, utf8_encode, UTF8_ENCODED_LEN, Slab, throw_invalid_bool } from './intrinsics.js';\nexport function addRbJsAbiHostToImports(imports, obj, get_export) {\n    if (!(\"rb-js-abi-host\" in imports))\n        imports[\"rb-js-abi-host\"] = {};\n    imports[\"rb-js-abi-host\"][\"eval-js: func(code: string) -> variant { success(handle<js-abi-value>), failure(handle<js-abi-value>) }\"] = function (arg0, arg1, arg2) {\n        const memory = get_export(\"memory\");\n        const ptr0 = arg0;\n        const len0 = arg1;\n        const result0 = UTF8_DECODER.decode(new Uint8Array(memory.buffer, ptr0, len0));\n        const ret0 = obj.evalJs(result0);\n        const variant1 = ret0;\n        switch (variant1.tag) {\n            case \"success\": {\n                const e = variant1.val;\n                data_view(memory).setInt8(arg2 + 0, 0, true);\n                data_view(memory).setInt32(arg2 + 4, resources0.insert(e), true);\n                break;\n            }\n            case \"failure\": {\n                const e = variant1.val;\n                data_view(memory).setInt8(arg2 + 0, 1, true);\n                data_view(memory).setInt32(arg2 + 4, resources0.insert(e), true);\n                break;\n            }\n            default:\n                throw new RangeError(\"invalid variant specified for JsAbiResult\");\n        }\n    };\n    imports[\"rb-js-abi-host\"][\"is-js: func(value: handle<js-abi-value>) -> bool\"] = function (arg0) {\n        const ret0 = obj.isJs(resources0.get(arg0));\n        return ret0 ? 1 : 0;\n    };\n    imports[\"rb-js-abi-host\"][\"instance-of: func(value: handle<js-abi-value>, klass: handle<js-abi-value>) -> bool\"] = function (arg0, arg1) {\n        const ret0 = obj.instanceOf(resources0.get(arg0), resources0.get(arg1));\n        return ret0 ? 1 : 0;\n    };\n    imports[\"rb-js-abi-host\"][\"global-this: func() -> handle<js-abi-value>\"] = function () {\n        const ret0 = obj.globalThis();\n        return resources0.insert(ret0);\n    };\n    imports[\"rb-js-abi-host\"][\"int-to-js-number: func(value: s32) -> handle<js-abi-value>\"] = function (arg0) {\n        const ret0 = obj.intToJsNumber(arg0);\n        return resources0.insert(ret0);\n    };\n    imports[\"rb-js-abi-host\"][\"float-to-js-number: func(value: float64) -> handle<js-abi-value>\"] = function (arg0) {\n        const ret0 = obj.floatToJsNumber(arg0);\n        return resources0.insert(ret0);\n    };\n    imports[\"rb-js-abi-host\"][\"string-to-js-string: func(value: string) -> handle<js-abi-value>\"] = function (arg0, arg1) {\n        const memory = get_export(\"memory\");\n        const ptr0 = arg0;\n        const len0 = arg1;\n        const result0 = UTF8_DECODER.decode(new Uint8Array(memory.buffer, ptr0, len0));\n        const ret0 = obj.stringToJsString(result0);\n        return resources0.insert(ret0);\n    };\n    imports[\"rb-js-abi-host\"][\"bool-to-js-bool: func(value: bool) -> handle<js-abi-value>\"] = function (arg0) {\n        const bool0 = arg0;\n        const ret0 = obj.boolToJsBool(bool0 == 0 ? false : (bool0 == 1 ? true : throw_invalid_bool()));\n        return resources0.insert(ret0);\n    };\n    imports[\"rb-js-abi-host\"][\"proc-to-js-function: func(value: u32) -> handle<js-abi-value>\"] = function (arg0) {\n        const ret0 = obj.procToJsFunction(arg0 >>> 0);\n        return resources0.insert(ret0);\n    };\n    imports[\"rb-js-abi-host\"][\"rb-object-to-js-rb-value: func(raw-rb-abi-value: u32) -> handle<js-abi-value>\"] = function (arg0) {\n        const ret0 = obj.rbObjectToJsRbValue(arg0 >>> 0);\n        return resources0.insert(ret0);\n    };\n    imports[\"rb-js-abi-host\"][\"js-value-to-string: func(value: handle<js-abi-value>) -> string\"] = function (arg0, arg1) {\n        const memory = get_export(\"memory\");\n        const realloc = get_export(\"cabi_realloc\");\n        const ret0 = obj.jsValueToString(resources0.get(arg0));\n        const ptr0 = utf8_encode(ret0, realloc, memory);\n        const len0 = UTF8_ENCODED_LEN;\n        data_view(memory).setInt32(arg1 + 4, len0, true);\n        data_view(memory).setInt32(arg1 + 0, ptr0, true);\n    };\n    imports[\"rb-js-abi-host\"][\"js-value-to-integer: func(value: handle<js-abi-value>) -> variant { as-float(float64), bignum(string) }\"] = function (arg0, arg1) {\n        const memory = get_export(\"memory\");\n        const realloc = get_export(\"cabi_realloc\");\n        const ret0 = obj.jsValueToInteger(resources0.get(arg0));\n        const variant1 = ret0;\n        switch (variant1.tag) {\n            case \"as-float\": {\n                const e = variant1.val;\n                data_view(memory).setInt8(arg1 + 0, 0, true);\n                data_view(memory).setFloat64(arg1 + 8, +e, true);\n                break;\n            }\n            case \"bignum\": {\n                const e = variant1.val;\n                data_view(memory).setInt8(arg1 + 0, 1, true);\n                const ptr0 = utf8_encode(e, realloc, memory);\n                const len0 = UTF8_ENCODED_LEN;\n                data_view(memory).setInt32(arg1 + 12, len0, true);\n                data_view(memory).setInt32(arg1 + 8, ptr0, true);\n                break;\n            }\n            default:\n                throw new RangeError(\"invalid variant specified for RawInteger\");\n        }\n    };\n    imports[\"rb-js-abi-host\"][\"export-js-value-to-host: func(value: handle<js-abi-value>) -> ()\"] = function (arg0) {\n        obj.exportJsValueToHost(resources0.get(arg0));\n    };\n    imports[\"rb-js-abi-host\"][\"import-js-value-from-host: func() -> handle<js-abi-value>\"] = function () {\n        const ret0 = obj.importJsValueFromHost();\n        return resources0.insert(ret0);\n    };\n    imports[\"rb-js-abi-host\"][\"js-value-typeof: func(value: handle<js-abi-value>) -> string\"] = function (arg0, arg1) {\n        const memory = get_export(\"memory\");\n        const realloc = get_export(\"cabi_realloc\");\n        const ret0 = obj.jsValueTypeof(resources0.get(arg0));\n        const ptr0 = utf8_encode(ret0, realloc, memory);\n        const len0 = UTF8_ENCODED_LEN;\n        data_view(memory).setInt32(arg1 + 4, len0, true);\n        data_view(memory).setInt32(arg1 + 0, ptr0, true);\n    };\n    imports[\"rb-js-abi-host\"][\"js-value-equal: func(lhs: handle<js-abi-value>, rhs: handle<js-abi-value>) -> bool\"] = function (arg0, arg1) {\n        const ret0 = obj.jsValueEqual(resources0.get(arg0), resources0.get(arg1));\n        return ret0 ? 1 : 0;\n    };\n    imports[\"rb-js-abi-host\"][\"js-value-strictly-equal: func(lhs: handle<js-abi-value>, rhs: handle<js-abi-value>) -> bool\"] = function (arg0, arg1) {\n        const ret0 = obj.jsValueStrictlyEqual(resources0.get(arg0), resources0.get(arg1));\n        return ret0 ? 1 : 0;\n    };\n    imports[\"rb-js-abi-host\"][\"reflect-apply: func(target: handle<js-abi-value>, this-argument: handle<js-abi-value>, arguments: list<handle<js-abi-value>>) -> variant { success(handle<js-abi-value>), failure(handle<js-abi-value>) }\"] = function (arg0, arg1, arg2, arg3, arg4) {\n        const memory = get_export(\"memory\");\n        const len0 = arg3;\n        const base0 = arg2;\n        const result0 = [];\n        for (let i = 0; i < len0; i++) {\n            const base = base0 + i * 4;\n            result0.push(resources0.get(data_view(memory).getInt32(base + 0, true)));\n        }\n        const ret0 = obj.reflectApply(resources0.get(arg0), resources0.get(arg1), result0);\n        const variant1 = ret0;\n        switch (variant1.tag) {\n            case \"success\": {\n                const e = variant1.val;\n                data_view(memory).setInt8(arg4 + 0, 0, true);\n                data_view(memory).setInt32(arg4 + 4, resources0.insert(e), true);\n                break;\n            }\n            case \"failure\": {\n                const e = variant1.val;\n                data_view(memory).setInt8(arg4 + 0, 1, true);\n                data_view(memory).setInt32(arg4 + 4, resources0.insert(e), true);\n                break;\n            }\n            default:\n                throw new RangeError(\"invalid variant specified for JsAbiResult\");\n        }\n    };\n    imports[\"rb-js-abi-host\"][\"reflect-construct: func(target: handle<js-abi-value>, arguments: list<handle<js-abi-value>>) -> handle<js-abi-value>\"] = function (arg0, arg1, arg2) {\n        const memory = get_export(\"memory\");\n        const len0 = arg2;\n        const base0 = arg1;\n        const result0 = [];\n        for (let i = 0; i < len0; i++) {\n            const base = base0 + i * 4;\n            result0.push(resources0.get(data_view(memory).getInt32(base + 0, true)));\n        }\n        const ret0 = obj.reflectConstruct(resources0.get(arg0), result0);\n        return resources0.insert(ret0);\n    };\n    imports[\"rb-js-abi-host\"][\"reflect-delete-property: func(target: handle<js-abi-value>, property-key: string) -> bool\"] = function (arg0, arg1, arg2) {\n        const memory = get_export(\"memory\");\n        const ptr0 = arg1;\n        const len0 = arg2;\n        const result0 = UTF8_DECODER.decode(new Uint8Array(memory.buffer, ptr0, len0));\n        const ret0 = obj.reflectDeleteProperty(resources0.get(arg0), result0);\n        return ret0 ? 1 : 0;\n    };\n    imports[\"rb-js-abi-host\"][\"reflect-get: func(target: handle<js-abi-value>, property-key: string) -> variant { success(handle<js-abi-value>), failure(handle<js-abi-value>) }\"] = function (arg0, arg1, arg2, arg3) {\n        const memory = get_export(\"memory\");\n        const ptr0 = arg1;\n        const len0 = arg2;\n        const result0 = UTF8_DECODER.decode(new Uint8Array(memory.buffer, ptr0, len0));\n        const ret0 = obj.reflectGet(resources0.get(arg0), result0);\n        const variant1 = ret0;\n        switch (variant1.tag) {\n            case \"success\": {\n                const e = variant1.val;\n                data_view(memory).setInt8(arg3 + 0, 0, true);\n                data_view(memory).setInt32(arg3 + 4, resources0.insert(e), true);\n                break;\n            }\n            case \"failure\": {\n                const e = variant1.val;\n                data_view(memory).setInt8(arg3 + 0, 1, true);\n                data_view(memory).setInt32(arg3 + 4, resources0.insert(e), true);\n                break;\n            }\n            default:\n                throw new RangeError(\"invalid variant specified for JsAbiResult\");\n        }\n    };\n    imports[\"rb-js-abi-host\"][\"reflect-get-own-property-descriptor: func(target: handle<js-abi-value>, property-key: string) -> handle<js-abi-value>\"] = function (arg0, arg1, arg2) {\n        const memory = get_export(\"memory\");\n        const ptr0 = arg1;\n        const len0 = arg2;\n        const result0 = UTF8_DECODER.decode(new Uint8Array(memory.buffer, ptr0, len0));\n        const ret0 = obj.reflectGetOwnPropertyDescriptor(resources0.get(arg0), result0);\n        return resources0.insert(ret0);\n    };\n    imports[\"rb-js-abi-host\"][\"reflect-get-prototype-of: func(target: handle<js-abi-value>) -> handle<js-abi-value>\"] = function (arg0) {\n        const ret0 = obj.reflectGetPrototypeOf(resources0.get(arg0));\n        return resources0.insert(ret0);\n    };\n    imports[\"rb-js-abi-host\"][\"reflect-has: func(target: handle<js-abi-value>, property-key: string) -> bool\"] = function (arg0, arg1, arg2) {\n        const memory = get_export(\"memory\");\n        const ptr0 = arg1;\n        const len0 = arg2;\n        const result0 = UTF8_DECODER.decode(new Uint8Array(memory.buffer, ptr0, len0));\n        const ret0 = obj.reflectHas(resources0.get(arg0), result0);\n        return ret0 ? 1 : 0;\n    };\n    imports[\"rb-js-abi-host\"][\"reflect-is-extensible: func(target: handle<js-abi-value>) -> bool\"] = function (arg0) {\n        const ret0 = obj.reflectIsExtensible(resources0.get(arg0));\n        return ret0 ? 1 : 0;\n    };\n    imports[\"rb-js-abi-host\"][\"reflect-own-keys: func(target: handle<js-abi-value>) -> list<handle<js-abi-value>>\"] = function (arg0, arg1) {\n        const memory = get_export(\"memory\");\n        const realloc = get_export(\"cabi_realloc\");\n        const ret0 = obj.reflectOwnKeys(resources0.get(arg0));\n        const vec0 = ret0;\n        const len0 = vec0.length;\n        const result0 = realloc(0, 0, 4, len0 * 4);\n        for (let i = 0; i < vec0.length; i++) {\n            const e = vec0[i];\n            const base = result0 + i * 4;\n            data_view(memory).setInt32(base + 0, resources0.insert(e), true);\n        }\n        data_view(memory).setInt32(arg1 + 4, len0, true);\n        data_view(memory).setInt32(arg1 + 0, result0, true);\n    };\n    imports[\"rb-js-abi-host\"][\"reflect-prevent-extensions: func(target: handle<js-abi-value>) -> bool\"] = function (arg0) {\n        const ret0 = obj.reflectPreventExtensions(resources0.get(arg0));\n        return ret0 ? 1 : 0;\n    };\n    imports[\"rb-js-abi-host\"][\"reflect-set: func(target: handle<js-abi-value>, property-key: string, value: handle<js-abi-value>) -> variant { success(handle<js-abi-value>), failure(handle<js-abi-value>) }\"] = function (arg0, arg1, arg2, arg3, arg4) {\n        const memory = get_export(\"memory\");\n        const ptr0 = arg1;\n        const len0 = arg2;\n        const result0 = UTF8_DECODER.decode(new Uint8Array(memory.buffer, ptr0, len0));\n        const ret0 = obj.reflectSet(resources0.get(arg0), result0, resources0.get(arg3));\n        const variant1 = ret0;\n        switch (variant1.tag) {\n            case \"success\": {\n                const e = variant1.val;\n                data_view(memory).setInt8(arg4 + 0, 0, true);\n                data_view(memory).setInt32(arg4 + 4, resources0.insert(e), true);\n                break;\n            }\n            case \"failure\": {\n                const e = variant1.val;\n                data_view(memory).setInt8(arg4 + 0, 1, true);\n                data_view(memory).setInt32(arg4 + 4, resources0.insert(e), true);\n                break;\n            }\n            default:\n                throw new RangeError(\"invalid variant specified for JsAbiResult\");\n        }\n    };\n    imports[\"rb-js-abi-host\"][\"reflect-set-prototype-of: func(target: handle<js-abi-value>, prototype: handle<js-abi-value>) -> bool\"] = function (arg0, arg1) {\n        const ret0 = obj.reflectSetPrototypeOf(resources0.get(arg0), resources0.get(arg1));\n        return ret0 ? 1 : 0;\n    };\n    if (!(\"canonical_abi\" in imports))\n        imports[\"canonical_abi\"] = {};\n    const resources0 = new Slab();\n    imports.canonical_abi[\"resource_drop_js-abi-value\"] = (i) => {\n        const val = resources0.remove(i);\n        if (obj.dropJsAbiValue)\n            obj.dropJsAbiValue(val);\n    };\n}\n", "import * as RbAbi from \"./bindgen/legacy/rb-abi-guest.js\";\nexport class LegacyBinding extends RbAbi.RbAbiGuest {\n    async setInstance(instance) {\n        await this.instantiate(instance);\n    }\n}\nexport class ComponentBinding {\n    constructor() { }\n    setUnderlying(underlying) {\n        this.underlying = underlying;\n    }\n    rubyShowVersion() {\n        this.underlying.rubyShowVersion();\n    }\n    rubyInit(args) {\n        this.underlying.rubyInit(args);\n    }\n    rubyInitLoadpath() {\n        this.underlying.rubyInitLoadpath();\n    }\n    rbEvalStringProtect(str) {\n        return this.underlying.rbEvalStringProtect(str);\n    }\n    rbFuncallvProtect(recv, mid, args) {\n        return this.underlying.rbFuncallvProtect(recv, mid, args);\n    }\n    rbIntern(name) {\n        return this.underlying.rbIntern(name);\n    }\n    rbErrinfo() {\n        return this.underlying.rbErrinfo();\n    }\n    rbClearErrinfo() {\n        return this.underlying.rbClearErrinfo();\n    }\n    rstringPtr(value) {\n        return this.underlying.rstringPtr(value);\n    }\n    rbVmBugreport() {\n        this.underlying.rbVmBugreport();\n    }\n    rbGcEnable() {\n        return this.underlying.rbGcEnable();\n    }\n    rbGcDisable() {\n        return this.underlying.rbGcDisable();\n    }\n    rbSetShouldProhibitRewind(newValue) {\n        return this.underlying.rbSetShouldProhibitRewind(newValue);\n    }\n    async setInstance(instance) {\n        // No-op\n    }\n    addToImports(imports) {\n        // No-op\n    }\n}\n", "import * as RbAbi from \"./bindgen/legacy/rb-abi-guest.js\";\nimport { addRbJsAbiHostToImports, } from \"./bindgen/legacy/rb-js-abi-host.js\";\nimport { ComponentBinding, LegacyBinding } from \"./binding.js\";\n/**\n * A Ruby VM instance\n * @see {@link RubyVM.instantiateComponent} and {@link RubyVM.instantiateModule} to create a new instance\n * @category Essentials\n */\nexport class RubyVM {\n    /**\n     * Instantiate a Ruby VM with the given WebAssembly Core module with WASI Preview 1 implementation.\n     *\n     * @param options The options to instantiate the Ruby VM\n     * @returns A promise that resolves to the Ruby VM instance and the WebAssembly instance\n     * @category Essentials\n     *\n     * @example\n     *\n     * import { WASI } from \"@bjorn3/browser_wasi_shim\";\n     * const wasip1 = new WASI([], [], []);\n     * const module = await WebAssembly.compile(\"./path/to/ruby.wasm\");\n     * const { vm } = await RubyVM.instantiateModule({ module, wasip1 });\n     *\n     */\n    static async instantiateModule(options) {\n        var _a, _b;\n        const { module, wasip1 } = options;\n        const vm = new RubyVM();\n        const imports = {\n            wasi_snapshot_preview1: wasip1.wasiImport,\n        };\n        vm.addToImports(imports);\n        (_a = options.addToImports) === null || _a === void 0 ? void 0 : _a.call(options, imports);\n        const instance = await WebAssembly.instantiate(module, imports);\n        await vm.setInstance(instance);\n        (_b = options.setMemory) === null || _b === void 0 ? void 0 : _b.call(options, instance.exports.memory);\n        wasip1.initialize(instance);\n        vm.initialize(options.args);\n        return { vm, instance };\n    }\n    /**\n     * Instantiate a Ruby VM with the given WebAssembly component with WASI Preview 2 implementation.\n     *\n     * @param options The options to instantiate the Ruby VM\n     * @returns A promise that resolves to the Ruby VM instance\n     * @category Essentials\n     *\n     * @example\n     *\n     * // First, you need to transpile the Ruby component to a JavaScript module using jco.\n     * // $ jco transpile --no-wasi-shim --instantiation --valid-lifting-optimization ./ruby.component.wasm -o ./component\n     * // Then, you can instantiate the Ruby VM with the component:\n     *\n     * import * as wasip2 from \"@bytecodealliance/preview2-shim\"\n     * import fs from \"fs/promises\";\n     * import path from \"path\";\n     *\n     * const { instantiate } = await import(\"./component/ruby.component.js\");\n     * const getCoreModule = async (relativePath) => {\n     *   const buffer = await fs.readFile(path.join(\"./component\", relativePath));\n     *   return WebAssembly.compile(buffer);\n     * }\n     *\n     * const { vm } = await RubyVM.instantiateComponent({\n     *   instantiate, getCoreModule, wasip2,\n     * });\n     *\n     */\n    static async instantiateComponent(options) {\n        let initComponent;\n        if (\"getCoreModule\" in options) {\n            // A convenience overload to instantiate with \"instantiate\" function generated by jco\n            initComponent = async (jsRuntime) => {\n                const { instantiate, getCoreModule, wasip2 } = options;\n                const { cli, clocks, filesystem, io, random, sockets, http } = wasip2;\n                const importObject = {\n                    \"ruby:js/js-runtime\": jsRuntime,\n                    \"wasi:cli/environment\": cli.environment,\n                    \"wasi:cli/exit\": cli.exit,\n                    \"wasi:cli/stderr\": cli.stderr,\n                    \"wasi:cli/stdin\": cli.stdin,\n                    \"wasi:cli/stdout\": cli.stdout,\n                    \"wasi:cli/terminal-input\": cli.terminalInput,\n                    \"wasi:cli/terminal-output\": cli.terminalOutput,\n                    \"wasi:cli/terminal-stderr\": cli.terminalStderr,\n                    \"wasi:cli/terminal-stdin\": cli.terminalStdin,\n                    \"wasi:cli/terminal-stdout\": cli.terminalStdout,\n                    \"wasi:clocks/monotonic-clock\": clocks.monotonicClock,\n                    \"wasi:clocks/wall-clock\": clocks.wallClock,\n                    \"wasi:filesystem/preopens\": filesystem.preopens,\n                    \"wasi:filesystem/types\": filesystem.types,\n                    \"wasi:io/error\": io.error,\n                    \"wasi:io/poll\": io.poll,\n                    \"wasi:io/streams\": io.streams,\n                    \"wasi:random/random\": random.random,\n                    \"wasi:sockets/tcp\": sockets.tcp,\n                    \"wasi:http/types\": http.types,\n                    \"wasi:http/incoming-handler\": http.incomingHandler,\n                    \"wasi:http/outgoing-handler\": http.outgoingHandler,\n                };\n                const component = await instantiate(getCoreModule, importObject, options.instantiateCore);\n                return component.rubyRuntime;\n            };\n        }\n        else {\n            initComponent = options.instantiate;\n        }\n        const vm = await this._instantiate({}, initComponent);\n        return { vm };\n    }\n    constructor(binding) {\n        this.instance = null;\n        this.interfaceState = {\n            hasJSFrameAfterRbFrame: false,\n        };\n        // Wrap exported functions from Ruby VM to prohibit nested VM operation\n        // if the call stack has sandwitched JS frames like JS -> Ruby -> JS -> Ruby.\n        const proxyExports = (exports) => {\n            const excludedMethods = [\n                \"setInstance\",\n                \"addToImports\",\n                \"instantiate\",\n                \"rbSetShouldProhibitRewind\",\n                \"rbGcDisable\",\n                \"rbGcEnable\",\n            ];\n            const excluded = [\"constructor\"].concat(excludedMethods);\n            // wrap all methods in RbAbi.RbAbiGuest class\n            for (const key of Object.getOwnPropertyNames(RbAbi.RbAbiGuest.prototype)) {\n                if (excluded.includes(key)) {\n                    continue;\n                }\n                const value = exports[key];\n                if (typeof value === \"function\") {\n                    exports[key] = (...args) => {\n                        const isNestedVMCall = this.interfaceState.hasJSFrameAfterRbFrame;\n                        if (isNestedVMCall) {\n                            const oldShouldProhibitRewind = this.guest.rbSetShouldProhibitRewind(true);\n                            const oldIsDisabledGc = this.guest.rbGcDisable();\n                            const result = Reflect.apply(value, exports, args);\n                            this.guest.rbSetShouldProhibitRewind(oldShouldProhibitRewind);\n                            if (!oldIsDisabledGc) {\n                                this.guest.rbGcEnable();\n                            }\n                            return result;\n                        }\n                        else {\n                            return Reflect.apply(value, exports, args);\n                        }\n                    };\n                }\n            }\n            return exports;\n        };\n        this.guest = proxyExports(binding !== null && binding !== void 0 ? binding : new LegacyBinding());\n        this.transport = new JsValueTransport();\n        this.exceptionFormatter = new RbExceptionFormatter();\n    }\n    static async _instantiate(options, initComponent) {\n        const binding = new ComponentBinding();\n        const vm = new RubyVM(binding);\n        class JsAbiValue {\n            constructor(underlying) {\n                this.underlying = underlying;\n            }\n        }\n        const imports = vm.getImports((from) => new JsAbiValue(from), (to) => to.underlying);\n        const component = await initComponent(Object.assign(Object.assign({}, imports), { throwProhibitRewindException: (message) => {\n                vm.throwProhibitRewindException(message);\n            }, procToJsFunction: () => {\n                const rbValue = new RbValue(component.exportRbValueToJs(), vm, vm.privateObject());\n                return new JsAbiValue((...args) => {\n                    return rbValue.call(\"call\", ...args.map((arg) => vm.wrap(arg))).toJS();\n                });\n            }, rbObjectToJsRbValue: () => {\n                const rbValue = new RbValue(component.exportRbValueToJs(), vm, vm.privateObject());\n                return new JsAbiValue(rbValue);\n            }, JsAbiValue: JsAbiValue }));\n        binding.setUnderlying(component);\n        vm.initialize(options.args);\n        return vm;\n    }\n    /**\n     * Initialize the Ruby VM with the given command line arguments\n     * @param args The command line arguments to pass to Ruby. Must be\n     * an array of strings starting with the Ruby program name.\n     * @category Low-level initialization\n     */\n    initialize(args = [\"ruby.wasm\", \"-EUTF-8\", \"-e_=0\"]) {\n        const c_args = args.map((arg) => arg + \"\\0\");\n        this.guest.rubyInit(c_args);\n        try {\n            this.eval(`\n        # Require Bundler standalone setup\n        if File.exist?(\"/bundle/bundler/setup.rb\")\n          require \"/bundle/bundler/setup.rb\"\n        elsif File.exist?(\"/bundle/setup.rb\")\n          # For non-CM builds, which doesn't use Bundler's standalone mode\n          require \"/bundle/setup.rb\"\n        end\n      `);\n        }\n        catch (e) {\n            console.warn(\"Failed to load /bundle/setup\", e);\n        }\n    }\n    /**\n     * Set a given instance to interact JavaScript and Ruby's\n     * WebAssembly instance. This method must be called before calling\n     * Ruby API.\n     *\n     * @param instance The WebAssembly instance to interact with. Must\n     * be instantiated from a Ruby built with JS extension, and built\n     * with Reactor ABI instead of command line.\n     * @category Low-level initialization\n     */\n    async setInstance(instance) {\n        this.instance = instance;\n        await this.guest.setInstance(instance);\n    }\n    /**\n     * Add intrinsic import entries, which is necessary to interact JavaScript\n     * and Ruby's WebAssembly instance.\n     * @param imports The import object to add to the WebAssembly instance\n     * @category Low-level initialization\n     */\n    addToImports(imports) {\n        this.guest.addToImports(imports);\n        imports[\"rb-js-abi-host\"] = {\n            rb_wasm_throw_prohibit_rewind_exception: (messagePtr, messageLen) => {\n                const memory = this.instance.exports.memory;\n                const str = new TextDecoder().decode(new Uint8Array(memory.buffer, messagePtr, messageLen));\n                this.throwProhibitRewindException(str);\n            },\n        };\n        addRbJsAbiHostToImports(imports, this.getImports((value) => value, (value) => value), (name) => {\n            return this.instance.exports[name];\n        });\n    }\n    throwProhibitRewindException(str) {\n        let message = \"Ruby APIs that may rewind the VM stack are prohibited under nested VM operation \" +\n            `(${str})\\n` +\n            \"Nested VM operation means that the call stack has sandwitched JS frames like JS -> Ruby -> JS -> Ruby \" +\n            \"caused by something like `window.rubyVM.eval(\\\"JS.global[:rubyVM].eval('Fiber.yield')\\\")`\\n\" +\n            \"\\n\" +\n            \"Please check your call stack and make sure that you are **not** doing any of the following inside the nested Ruby frame:\\n\" +\n            \"  1. Switching fibers (e.g. Fiber#resume, Fiber.yield, and Fiber#transfer)\\n\" +\n            \"     Note that `evalAsync` JS API switches fibers internally\\n\" +\n            \"  2. Raising uncaught exceptions\\n\" +\n            \"     Please catch all exceptions inside the nested operation\\n\" +\n            \"  3. Calling Continuation APIs\\n\";\n        const error = new RbValue(this.guest.rbErrinfo(), this, this.privateObject());\n        if (error.call(\"nil?\").toString() === \"false\") {\n            message += \"\\n\" + this.exceptionFormatter.format(error, this, this.privateObject());\n        }\n        throw new RbFatalError(message);\n    }\n    getImports(toJSAbiValue, fromJSAbiValue) {\n        // NOTE: The GC may collect objects that are still referenced by Wasm\n        // locals because Asyncify cannot scan the Wasm stack above the JS frame.\n        // So we need to keep track whether the JS frame is sandwitched by Ruby\n        // frames or not, and prohibit nested VM operation if it is.\n        const proxyImports = (imports) => {\n            for (const [key, value] of Object.entries(imports)) {\n                if (typeof value === \"function\") {\n                    imports[key] = (...args) => {\n                        const oldValue = this.interfaceState.hasJSFrameAfterRbFrame;\n                        this.interfaceState.hasJSFrameAfterRbFrame = true;\n                        const result = Reflect.apply(value, imports, args);\n                        this.interfaceState.hasJSFrameAfterRbFrame = oldValue;\n                        return result;\n                    };\n                }\n            }\n            return imports;\n        };\n        function wrapTry(f) {\n            return (...args) => {\n                try {\n                    return { tag: \"success\", val: f(...args) };\n                }\n                catch (e) {\n                    if (e instanceof RbFatalError) {\n                        // RbFatalError should not be caught by Ruby because it Ruby VM\n                        // can be already in an inconsistent state.\n                        throw e;\n                    }\n                    return { tag: \"failure\", val: toJSAbiValue(e) };\n                }\n            };\n        }\n        return proxyImports({\n            evalJs: wrapTry((code) => {\n                return toJSAbiValue(Function(code)());\n            }),\n            isJs: (value) => {\n                // Just for compatibility with the old JS API\n                return true;\n            },\n            globalThis: () => {\n                if (typeof globalThis !== \"undefined\") {\n                    return toJSAbiValue(globalThis);\n                }\n                else if (typeof global !== \"undefined\") {\n                    return toJSAbiValue(global);\n                }\n                else if (typeof window !== \"undefined\") {\n                    return toJSAbiValue(window);\n                }\n                throw new Error(\"unable to locate global object\");\n            },\n            intToJsNumber: (value) => {\n                return toJSAbiValue(value);\n            },\n            floatToJsNumber: (value) => {\n                return toJSAbiValue(value);\n            },\n            stringToJsString: (value) => {\n                return toJSAbiValue(value);\n            },\n            boolToJsBool: (value) => {\n                return toJSAbiValue(value);\n            },\n            procToJsFunction: (rawRbAbiValue) => {\n                const rbValue = this.rbValueOfPointer(rawRbAbiValue);\n                return toJSAbiValue((...args) => {\n                    return rbValue.call(\"call\", ...args.map((arg) => this.wrap(arg))).toJS();\n                });\n            },\n            rbObjectToJsRbValue: (rawRbAbiValue) => {\n                return toJSAbiValue(this.rbValueOfPointer(rawRbAbiValue));\n            },\n            jsValueToString: (value) => {\n                value = fromJSAbiValue(value);\n                // According to the [spec](https://tc39.es/ecma262/multipage/text-processing.html#sec-string-constructor-string-value)\n                // `String(value)` always returns a string.\n                return String(value);\n            },\n            jsValueToInteger(value) {\n                value = fromJSAbiValue(value);\n                if (typeof value === \"number\") {\n                    return { tag: \"as-float\", val: value };\n                }\n                else if (typeof value === \"bigint\") {\n                    return { tag: \"bignum\", val: BigInt(value).toString(10) + \"\\0\" };\n                }\n                else if (typeof value === \"string\") {\n                    return { tag: \"bignum\", val: value + \"\\0\" };\n                }\n                else if (typeof value === \"undefined\") {\n                    return { tag: \"as-float\", val: 0 };\n                }\n                else {\n                    return { tag: \"as-float\", val: Number(value) };\n                }\n            },\n            exportJsValueToHost: (value) => {\n                // See `JsValueExporter` for the reason why we need to do this\n                this.transport.takeJsValue(fromJSAbiValue(value));\n            },\n            importJsValueFromHost: () => {\n                return toJSAbiValue(this.transport.consumeJsValue());\n            },\n            instanceOf: (value, klass) => {\n                klass = fromJSAbiValue(klass);\n                if (typeof klass === \"function\") {\n                    return fromJSAbiValue(value) instanceof klass;\n                }\n                else {\n                    return false;\n                }\n            },\n            jsValueTypeof(value) {\n                return typeof fromJSAbiValue(value);\n            },\n            jsValueEqual(lhs, rhs) {\n                return fromJSAbiValue(lhs) == fromJSAbiValue(rhs);\n            },\n            jsValueStrictlyEqual(lhs, rhs) {\n                return fromJSAbiValue(lhs) === fromJSAbiValue(rhs);\n            },\n            reflectApply: wrapTry((target, thisArgument, args) => {\n                const jsArgs = args.map((arg) => fromJSAbiValue(arg));\n                return toJSAbiValue(Reflect.apply(fromJSAbiValue(target), fromJSAbiValue(thisArgument), jsArgs));\n            }),\n            reflectConstruct: function (target, args) {\n                throw new Error(\"Function not implemented.\");\n            },\n            reflectDeleteProperty: function (target, propertyKey) {\n                throw new Error(\"Function not implemented.\");\n            },\n            reflectGet: wrapTry((target, propertyKey) => {\n                return toJSAbiValue(fromJSAbiValue(target)[propertyKey]);\n            }),\n            reflectGetOwnPropertyDescriptor: function (target, propertyKey) {\n                throw new Error(\"Function not implemented.\");\n            },\n            reflectGetPrototypeOf: function (target) {\n                throw new Error(\"Function not implemented.\");\n            },\n            reflectHas: function (target, propertyKey) {\n                throw new Error(\"Function not implemented.\");\n            },\n            reflectIsExtensible: function (target) {\n                throw new Error(\"Function not implemented.\");\n            },\n            reflectOwnKeys: function (target) {\n                throw new Error(\"Function not implemented.\");\n            },\n            reflectPreventExtensions: function (target) {\n                throw new Error(\"Function not implemented.\");\n            },\n            reflectSet: wrapTry((target, propertyKey, value) => {\n                return toJSAbiValue(Reflect.set(fromJSAbiValue(target), propertyKey, fromJSAbiValue(value)));\n            }),\n            reflectSetPrototypeOf: function (target, prototype) {\n                throw new Error(\"Function not implemented.\");\n            },\n        });\n    }\n    /**\n     * Print the Ruby version to stdout\n     */\n    printVersion() {\n        this.guest.rubyShowVersion();\n    }\n    /**\n     * Runs a string of Ruby code from JavaScript\n     * @param code The Ruby code to run\n     * @returns the result of the last expression\n     * @category Essentials\n     *\n     * @example\n     * vm.eval(\"puts 'hello world'\");\n     * const result = vm.eval(\"1 + 2\");\n     * console.log(result.toString()); // 3\n     *\n     */\n    eval(code) {\n        return evalRbCode(this, this.privateObject(), code);\n    }\n    /**\n     * Runs a string of Ruby code with top-level `JS::Object#await`\n     * Returns a promise that resolves when execution completes.\n     * @param code The Ruby code to run\n     * @returns a promise that resolves to the result of the last expression\n     * @category Essentials\n     *\n     * @example\n     * const text = await vm.evalAsync(`\n     *   require 'js'\n     *   response = JS.global.fetch('https://example.com').await\n     *   response.text.await\n     * `);\n     * console.log(text.toString()); // <html>...</html>\n     */\n    evalAsync(code) {\n        const JS = this.eval(\"require 'js'; JS\");\n        return newRbPromise(this, this.privateObject(), (future) => {\n            JS.call(\"__eval_async_rb\", this.wrap(code), future);\n        });\n    }\n    /**\n     * Wrap a JavaScript value into a Ruby JS::Object\n     * @param value The value to convert to RbValue\n     * @returns the RbValue object representing the given JS value\n     *\n     * @example\n     * const hash = vm.eval(`Hash.new`)\n     * hash.call(\"store\", vm.eval(`\"key1\"`), vm.wrap(new Object()));\n     */\n    wrap(value) {\n        return this.transport.importJsValue(value, this);\n    }\n    /** @private */\n    privateObject() {\n        return {\n            transport: this.transport,\n            exceptionFormatter: this.exceptionFormatter,\n        };\n    }\n    /** @private */\n    rbValueOfPointer(pointer) {\n        const abiValue = new RbAbi.RbAbiValue(pointer, this.guest);\n        return new RbValue(abiValue, this, this.privateObject());\n    }\n}\n/**\n * Export a JS value held by the Ruby VM to the JS environment.\n * This is implemented in a dirty way since wit cannot reference resources\n * defined in other interfaces.\n * In our case, we can't express `function(v: rb-abi-value) -> js-abi-value`\n * because `rb-js-abi-host.wit`, that defines `js-abi-value`, is implemented\n * by embedder side (JS) but `rb-abi-guest.wit`, that defines `rb-abi-value`\n * is implemented by guest side (Wasm).\n *\n * This class is a helper to export by:\n * 1. Call `function __export_to_js(v: rb-abi-value)` defined in guest from embedder side.\n * 2. Call `function takeJsValue(v: js-abi-value)` defined in embedder from guest side with\n *    underlying JS value of given `rb-abi-value`.\n * 3. Then `takeJsValue` implementation escapes the given JS value to the `_takenJsValues`\n *    stored in embedder side.\n * 4. Finally, embedder side can take `_takenJsValues`.\n *\n * Note that `exportJsValue` is not reentrant.\n *\n * @private\n */\nclass JsValueTransport {\n    constructor() {\n        this._takenJsValue = null;\n    }\n    takeJsValue(value) {\n        this._takenJsValue = value;\n    }\n    consumeJsValue() {\n        return this._takenJsValue;\n    }\n    exportJsValue(value) {\n        value.call(\"__export_to_js\");\n        return this._takenJsValue;\n    }\n    importJsValue(value, vm) {\n        this._takenJsValue = value;\n        return vm.eval('require \"js\"; JS::Object').call(\"__import_from_js\");\n    }\n}\n/**\n * A RbValue is an object that represents a value in Ruby\n * @category Essentials\n */\nexport class RbValue {\n    /**\n     * @hideconstructor\n     */\n    constructor(inner, vm, privateObject) {\n        this.inner = inner;\n        this.vm = vm;\n        this.privateObject = privateObject;\n    }\n    /**\n     * Call a given method with given arguments\n     *\n     * @param callee name of the Ruby method to call\n     * @param args arguments to pass to the method. Must be an array of RbValue\n     * @returns The result of the method call as a new RbValue.\n     *\n     * @example\n     * const ary = vm.eval(\"[1, 2, 3]\");\n     * ary.call(\"push\", 4);\n     * console.log(ary.call(\"sample\").toString());\n     */\n    call(callee, ...args) {\n        const innerArgs = args.map((arg) => arg.inner);\n        return new RbValue(callRbMethod(this.vm, this.privateObject, this.inner, callee, innerArgs), this.vm, this.privateObject);\n    }\n    /**\n     * Call a given method that may call `JS::Object#await` with given arguments\n     *\n     * @param callee name of the Ruby method to call\n     * @param args arguments to pass to the method. Must be an array of RbValue\n     * @returns A Promise that resolves to the result of the method call as a new RbValue.\n     *\n     * @example\n     * const client = vm.eval(`\n     *   require 'js'\n     *   class HttpClient\n     *     def get(url)\n     *       JS.global.fetch(url).await\n     *     end\n     *   end\n     *   HttpClient.new\n     * `);\n     * const response = await client.callAsync(\"get\", vm.eval(`\"https://example.com\"`));\n     */\n    callAsync(callee, ...args) {\n        const JS = this.vm.eval(\"require 'js'; JS\");\n        return newRbPromise(this.vm, this.privateObject, (future) => {\n            JS.call(\"__call_async_method\", this, this.vm.wrap(callee), future, ...args);\n        });\n    }\n    /**\n     * @see {@link https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toPrimitive}\n     * @param hint Preferred type of the result primitive value. `\"number\"`, `\"string\"`, or `\"default\"`.\n     */\n    [Symbol.toPrimitive](hint) {\n        if (hint === \"string\" || hint === \"default\") {\n            return this.toString();\n        }\n        else if (hint === \"number\") {\n            return null;\n        }\n        return null;\n    }\n    /**\n     * Returns a string representation of the value by calling `to_s`\n     */\n    toString() {\n        const rbString = callRbMethod(this.vm, this.privateObject, this.inner, \"to_s\", []);\n        return this.vm.guest.rstringPtr(rbString);\n    }\n    /**\n     * Returns a JavaScript object representation of the value\n     * by calling `to_js`.\n     *\n     * Returns null if the value is not convertible to a JavaScript object.\n     */\n    toJS() {\n        const JS = this.vm.eval(\"JS\");\n        const jsValue = JS.call(\"try_convert\", this);\n        if (jsValue.call(\"nil?\").toString() === \"true\") {\n            return null;\n        }\n        return this.privateObject.transport.exportJsValue(jsValue);\n    }\n}\nvar ruby_tag_type;\n(function (ruby_tag_type) {\n    ruby_tag_type[ruby_tag_type[\"None\"] = 0] = \"None\";\n    ruby_tag_type[ruby_tag_type[\"Return\"] = 1] = \"Return\";\n    ruby_tag_type[ruby_tag_type[\"Break\"] = 2] = \"Break\";\n    ruby_tag_type[ruby_tag_type[\"Next\"] = 3] = \"Next\";\n    ruby_tag_type[ruby_tag_type[\"Retry\"] = 4] = \"Retry\";\n    ruby_tag_type[ruby_tag_type[\"Redo\"] = 5] = \"Redo\";\n    ruby_tag_type[ruby_tag_type[\"Raise\"] = 6] = \"Raise\";\n    ruby_tag_type[ruby_tag_type[\"Throw\"] = 7] = \"Throw\";\n    ruby_tag_type[ruby_tag_type[\"Fatal\"] = 8] = \"Fatal\";\n    ruby_tag_type[ruby_tag_type[\"Mask\"] = 15] = \"Mask\";\n})(ruby_tag_type || (ruby_tag_type = {}));\nclass RbExceptionFormatter {\n    constructor() {\n        this.literalsCache = null;\n        this.isFormmatting = false;\n    }\n    format(error, vm, privateObject) {\n        // All Ruby exceptions raised during formatting exception message should\n        // be caught and return a fallback message.\n        // Therefore, we don't need to worry about infinite recursion here ideally\n        // but checking re-entrancy just in case.\n        class RbExceptionFormatterError extends Error {\n        }\n        if (this.isFormmatting) {\n            throw new RbExceptionFormatterError(\"Unexpected exception occurred during formatting exception message\");\n        }\n        this.isFormmatting = true;\n        try {\n            return this._format(error, vm, privateObject);\n        }\n        finally {\n            this.isFormmatting = false;\n        }\n    }\n    _format(error, vm, privateObject) {\n        const [zeroLiteral, oneLiteral, newLineLiteral] = (() => {\n            if (this.literalsCache == null) {\n                const zeroOneNewLine = [\n                    evalRbCode(vm, privateObject, \"0\"),\n                    evalRbCode(vm, privateObject, \"1\"),\n                    evalRbCode(vm, privateObject, `\"\\n\"`),\n                ];\n                this.literalsCache = zeroOneNewLine;\n                return zeroOneNewLine;\n            }\n            else {\n                return this.literalsCache;\n            }\n        })();\n        let className;\n        let backtrace;\n        let message;\n        try {\n            className = error.call(\"class\").toString();\n        }\n        catch (e) {\n            className = \"unknown\";\n        }\n        try {\n            message = error.call(\"message\").toString();\n        }\n        catch (e) {\n            message = \"unknown\";\n        }\n        try {\n            backtrace = error.call(\"backtrace\");\n        }\n        catch (e) {\n            return this.formatString(className, message);\n        }\n        if (backtrace.call(\"nil?\").toString() === \"true\") {\n            return this.formatString(className, message);\n        }\n        try {\n            const firstLine = backtrace.call(\"at\", zeroLiteral);\n            const restLines = backtrace\n                .call(\"drop\", oneLiteral)\n                .call(\"join\", newLineLiteral);\n            return this.formatString(className, message, [\n                firstLine.toString(),\n                restLines.toString(),\n            ]);\n        }\n        catch (e) {\n            return this.formatString(className, message);\n        }\n    }\n    formatString(klass, message, backtrace) {\n        if (backtrace) {\n            return `${backtrace[0]}: ${message} (${klass})\\n${backtrace[1]}`;\n        }\n        else {\n            return `${klass}: ${message}`;\n        }\n    }\n}\nconst checkStatusTag = (rawTag, vm, privateObject) => {\n    switch (rawTag & ruby_tag_type.Mask) {\n        case ruby_tag_type.None:\n            break;\n        case ruby_tag_type.Return:\n            throw new RbError(\"unexpected return\");\n        case ruby_tag_type.Next:\n            throw new RbError(\"unexpected next\");\n        case ruby_tag_type.Break:\n            throw new RbError(\"unexpected break\");\n        case ruby_tag_type.Redo:\n            throw new RbError(\"unexpected redo\");\n        case ruby_tag_type.Retry:\n            throw new RbError(\"retry outside of rescue clause\");\n        case ruby_tag_type.Throw:\n            throw new RbError(\"unexpected throw\");\n        case ruby_tag_type.Raise:\n        case ruby_tag_type.Fatal:\n            const error = new RbValue(vm.guest.rbErrinfo(), vm, privateObject);\n            if (error.call(\"nil?\").toString() === \"true\") {\n                throw new RbError(\"no exception object\");\n            }\n            // clear errinfo if got exception due to no rb_jump_tag\n            vm.guest.rbClearErrinfo();\n            throw new RbError(privateObject.exceptionFormatter.format(error, vm, privateObject));\n        default:\n            throw new RbError(`unknown error tag: ${rawTag}`);\n    }\n};\nfunction wrapRbOperation(vm, body) {\n    try {\n        return body();\n    }\n    catch (e) {\n        if (e instanceof RbError) {\n            throw e;\n        }\n        // All JS exceptions triggered by Ruby code are translated to Ruby exceptions,\n        // so non-RbError exceptions are unexpected.\n        try {\n            vm.guest.rbVmBugreport();\n        }\n        catch (e) {\n            console.error(\"Tried to report internal Ruby VM state but failed: \", e);\n        }\n        if (e instanceof WebAssembly.RuntimeError && e.message === \"unreachable\") {\n            const error = new RbError(`Something went wrong in Ruby VM: ${e}`);\n            error.stack = e.stack;\n            throw error;\n        }\n        else {\n            throw e;\n        }\n    }\n}\nconst callRbMethod = (vm, privateObject, recv, callee, args) => {\n    const mid = vm.guest.rbIntern(callee + \"\\0\");\n    return wrapRbOperation(vm, () => {\n        const [value, status] = vm.guest.rbFuncallvProtect(recv, mid, args);\n        checkStatusTag(status, vm, privateObject);\n        return value;\n    });\n};\nconst evalRbCode = (vm, privateObject, code) => {\n    return wrapRbOperation(vm, () => {\n        const [value, status] = vm.guest.rbEvalStringProtect(code + \"\\0\");\n        checkStatusTag(status, vm, privateObject);\n        return new RbValue(value, vm, privateObject);\n    });\n};\nfunction newRbPromise(vm, privateObject, body) {\n    return new Promise((resolve, reject) => {\n        const future = vm.wrap({\n            resolve,\n            reject: (error) => {\n                const rbError = new RbError(privateObject.exceptionFormatter.format(error, vm, privateObject));\n                reject(rbError);\n            },\n        });\n        body(future);\n    });\n}\n/**\n * Error class thrown by Ruby execution\n */\nexport class RbError extends Error {\n    /**\n     * @hideconstructor\n     */\n    constructor(message) {\n        super(message);\n    }\n}\n/**\n * Error class thrown by Ruby execution when it is not possible to recover.\n * This is usually caused when Ruby VM is in an inconsistent state.\n */\nexport class RbFatalError extends RbError {\n    /**\n     * @hideconstructor\n     */\n    constructor(message) {\n        super(\"Ruby Fatal Error: \" + message);\n    }\n}\n", "export const FD_STDIN=0;export const FD_STDOUT=1;export const FD_STDERR=2;export const CLOCKID_REALTIME=0;export const CLOCKID_MONOTONIC=1;export const CLOCKID_PROCESS_CPUTIME_ID=2;export const CLOCKID_THREAD_CPUTIME_ID=3;export const ERRNO_SUCCESS=0;export const ERRNO_2BIG=1;export const ERRNO_ACCES=2;export const ERRNO_ADDRINUSE=3;export const ERRNO_ADDRNOTAVAIL=4;export const ERRNO_AFNOSUPPORT=5;export const ERRNO_AGAIN=6;export const ERRNO_ALREADY=7;export const ERRNO_BADF=8;export const ERRNO_BADMSG=9;export const ERRNO_BUSY=10;export const ERRNO_CANCELED=11;export const ERRNO_CHILD=12;export const ERRNO_CONNABORTED=13;export const ERRNO_CONNREFUSED=14;export const ERRNO_CONNRESET=15;export const ERRNO_DEADLK=16;export const ERRNO_DESTADDRREQ=17;export const ERRNO_DOM=18;export const ERRNO_DQUOT=19;export const ERRNO_EXIST=20;export const ERRNO_FAULT=21;export const ERRNO_FBIG=22;export const ERRNO_HOSTUNREACH=23;export const ERRNO_IDRM=24;export const ERRNO_ILSEQ=25;export const ERRNO_INPROGRESS=26;export const ERRNO_INTR=27;export const ERRNO_INVAL=28;export const ERRNO_IO=29;export const ERRNO_ISCONN=30;export const ERRNO_ISDIR=31;export const ERRNO_LOOP=32;export const ERRNO_MFILE=33;export const ERRNO_MLINK=34;export const ERRNO_MSGSIZE=35;export const ERRNO_MULTIHOP=36;export const ERRNO_NAMETOOLONG=37;export const ERRNO_NETDOWN=38;export const ERRNO_NETRESET=39;export const ERRNO_NETUNREACH=40;export const ERRNO_NFILE=41;export const ERRNO_NOBUFS=42;export const ERRNO_NODEV=43;export const ERRNO_NOENT=44;export const ERRNO_NOEXEC=45;export const ERRNO_NOLCK=46;export const ERRNO_NOLINK=47;export const ERRNO_NOMEM=48;export const ERRNO_NOMSG=49;export const ERRNO_NOPROTOOPT=50;export const ERRNO_NOSPC=51;export const ERRNO_NOSYS=52;export const ERRNO_NOTCONN=53;export const ERRNO_NOTDIR=54;export const ERRNO_NOTEMPTY=55;export const ERRNO_NOTRECOVERABLE=56;export const ERRNO_NOTSOCK=57;export const ERRNO_NOTSUP=58;export const ERRNO_NOTTY=59;export const ERRNO_NXIO=60;export const ERRNO_OVERFLOW=61;export const ERRNO_OWNERDEAD=62;export const ERRNO_PERM=63;export const ERRNO_PIPE=64;export const ERRNO_PROTO=65;export const ERRNO_PROTONOSUPPORT=66;export const ERRNO_PROTOTYPE=67;export const ERRNO_RANGE=68;export const ERRNO_ROFS=69;export const ERRNO_SPIPE=70;export const ERRNO_SRCH=71;export const ERRNO_STALE=72;export const ERRNO_TIMEDOUT=73;export const ERRNO_TXTBSY=74;export const ERRNO_XDEV=75;export const ERRNO_NOTCAPABLE=76;export const RIGHTS_FD_DATASYNC=1<<0;export const RIGHTS_FD_READ=1<<1;export const RIGHTS_FD_SEEK=1<<2;export const RIGHTS_FD_FDSTAT_SET_FLAGS=1<<3;export const RIGHTS_FD_SYNC=1<<4;export const RIGHTS_FD_TELL=1<<5;export const RIGHTS_FD_WRITE=1<<6;export const RIGHTS_FD_ADVISE=1<<7;export const RIGHTS_FD_ALLOCATE=1<<8;export const RIGHTS_PATH_CREATE_DIRECTORY=1<<9;export const RIGHTS_PATH_CREATE_FILE=1<<10;export const RIGHTS_PATH_LINK_SOURCE=1<<11;export const RIGHTS_PATH_LINK_TARGET=1<<12;export const RIGHTS_PATH_OPEN=1<<13;export const RIGHTS_FD_READDIR=1<<14;export const RIGHTS_PATH_READLINK=1<<15;export const RIGHTS_PATH_RENAME_SOURCE=1<<16;export const RIGHTS_PATH_RENAME_TARGET=1<<17;export const RIGHTS_PATH_FILESTAT_GET=1<<18;export const RIGHTS_PATH_FILESTAT_SET_SIZE=1<<19;export const RIGHTS_PATH_FILESTAT_SET_TIMES=1<<20;export const RIGHTS_FD_FILESTAT_GET=1<<21;export const RIGHTS_FD_FILESTAT_SET_SIZE=1<<22;export const RIGHTS_FD_FILESTAT_SET_TIMES=1<<23;export const RIGHTS_PATH_SYMLINK=1<<24;export const RIGHTS_PATH_REMOVE_DIRECTORY=1<<25;export const RIGHTS_PATH_UNLINK_FILE=1<<26;export const RIGHTS_POLL_FD_READWRITE=1<<27;export const RIGHTS_SOCK_SHUTDOWN=1<<28;export class Iovec{static read_bytes(view,ptr){const iovec=new Iovec;iovec.buf=view.getUint32(ptr,true);iovec.buf_len=view.getUint32(ptr+4,true);return iovec}static read_bytes_array(view,ptr,len){const iovecs=[];for(let i=0;i<len;i++){iovecs.push(Iovec.read_bytes(view,ptr+8*i))}return iovecs}}export class Ciovec{static read_bytes(view,ptr){const iovec=new Ciovec;iovec.buf=view.getUint32(ptr,true);iovec.buf_len=view.getUint32(ptr+4,true);return iovec}static read_bytes_array(view,ptr,len){const iovecs=[];for(let i=0;i<len;i++){iovecs.push(Ciovec.read_bytes(view,ptr+8*i))}return iovecs}}export const WHENCE_SET=0;export const WHENCE_CUR=1;export const WHENCE_END=2;export const FILETYPE_UNKNOWN=0;export const FILETYPE_BLOCK_DEVICE=1;export const FILETYPE_CHARACTER_DEVICE=2;export const FILETYPE_DIRECTORY=3;export const FILETYPE_REGULAR_FILE=4;export const FILETYPE_SOCKET_DGRAM=5;export const FILETYPE_SOCKET_STREAM=6;export const FILETYPE_SYMBOLIC_LINK=7;export class Dirent{head_length(){return 24}name_length(){return this.dir_name.byteLength}write_head_bytes(view,ptr){view.setBigUint64(ptr,this.d_next,true);view.setBigUint64(ptr+8,this.d_ino,true);view.setUint32(ptr+16,this.dir_name.length,true);view.setUint8(ptr+20,this.d_type)}write_name_bytes(view8,ptr,buf_len){view8.set(this.dir_name.slice(0,Math.min(this.dir_name.byteLength,buf_len)),ptr)}constructor(next_cookie,name,type){this.d_ino=0n;const encoded_name=new TextEncoder().encode(name);this.d_next=next_cookie;this.d_namlen=encoded_name.byteLength;this.d_type=type;this.dir_name=encoded_name}}export const ADVICE_NORMAL=0;export const ADVICE_SEQUENTIAL=1;export const ADVICE_RANDOM=2;export const ADVICE_WILLNEED=3;export const ADVICE_DONTNEED=4;export const ADVICE_NOREUSE=5;export const FDFLAGS_APPEND=1<<0;export const FDFLAGS_DSYNC=1<<1;export const FDFLAGS_NONBLOCK=1<<2;export const FDFLAGS_RSYNC=1<<3;export const FDFLAGS_SYNC=1<<4;export class Fdstat{write_bytes(view,ptr){view.setUint8(ptr,this.fs_filetype);view.setUint16(ptr+2,this.fs_flags,true);view.setBigUint64(ptr+8,this.fs_rights_base,true);view.setBigUint64(ptr+16,this.fs_rights_inherited,true)}constructor(filetype,flags){this.fs_rights_base=0n;this.fs_rights_inherited=0n;this.fs_filetype=filetype;this.fs_flags=flags}}export const FSTFLAGS_ATIM=1<<0;export const FSTFLAGS_ATIM_NOW=1<<1;export const FSTFLAGS_MTIM=1<<2;export const FSTFLAGS_MTIM_NOW=1<<3;export const OFLAGS_CREAT=1<<0;export const OFLAGS_DIRECTORY=1<<1;export const OFLAGS_EXCL=1<<2;export const OFLAGS_TRUNC=1<<3;export class Filestat{write_bytes(view,ptr){view.setBigUint64(ptr,this.dev,true);view.setBigUint64(ptr+8,this.ino,true);view.setUint8(ptr+16,this.filetype);view.setBigUint64(ptr+24,this.nlink,true);view.setBigUint64(ptr+32,this.size,true);view.setBigUint64(ptr+38,this.atim,true);view.setBigUint64(ptr+46,this.mtim,true);view.setBigUint64(ptr+52,this.ctim,true)}constructor(filetype,size){this.dev=0n;this.ino=0n;this.nlink=0n;this.atim=0n;this.mtim=0n;this.ctim=0n;this.filetype=filetype;this.size=size}}export const EVENTTYPE_CLOCK=0;export const EVENTTYPE_FD_READ=1;export const EVENTTYPE_FD_WRITE=2;export const EVENTRWFLAGS_FD_READWRITE_HANGUP=1<<0;export const SUBCLOCKFLAGS_SUBSCRIPTION_CLOCK_ABSTIME=1<<0;export const SIGNAL_NONE=0;export const SIGNAL_HUP=1;export const SIGNAL_INT=2;export const SIGNAL_QUIT=3;export const SIGNAL_ILL=4;export const SIGNAL_TRAP=5;export const SIGNAL_ABRT=6;export const SIGNAL_BUS=7;export const SIGNAL_FPE=8;export const SIGNAL_KILL=9;export const SIGNAL_USR1=10;export const SIGNAL_SEGV=11;export const SIGNAL_USR2=12;export const SIGNAL_PIPE=13;export const SIGNAL_ALRM=14;export const SIGNAL_TERM=15;export const SIGNAL_CHLD=16;export const SIGNAL_CONT=17;export const SIGNAL_STOP=18;export const SIGNAL_TSTP=19;export const SIGNAL_TTIN=20;export const SIGNAL_TTOU=21;export const SIGNAL_URG=22;export const SIGNAL_XCPU=23;export const SIGNAL_XFSZ=24;export const SIGNAL_VTALRM=25;export const SIGNAL_PROF=26;export const SIGNAL_WINCH=27;export const SIGNAL_POLL=28;export const SIGNAL_PWR=29;export const SIGNAL_SYS=30;export const RIFLAGS_RECV_PEEK=1<<0;export const RIFLAGS_RECV_WAITALL=1<<1;export const ROFLAGS_RECV_DATA_TRUNCATED=1<<0;export const SDFLAGS_RD=1<<0;export const SDFLAGS_WR=1<<1;export const PREOPENTYPE_DIR=0;export class PrestatDir{write_bytes(view,ptr){view.setUint32(ptr,this.pr_name.byteLength,true)}constructor(name){this.pr_name=new TextEncoder().encode(name)}}export class Prestat{static dir(name){const prestat=new Prestat;prestat.tag=PREOPENTYPE_DIR;prestat.inner=new PrestatDir(name);return prestat}write_bytes(view,ptr){view.setUint32(ptr,this.tag,true);this.inner.write_bytes(view,ptr+4)}}", "let Debug=class Debug{enable(enabled){this.log=createLogger(enabled===undefined?true:enabled,this.prefix)}get enabled(){return this.isEnabled}constructor(isEnabled){this.isEnabled=isEnabled;this.prefix=\"wasi:\";this.enable(isEnabled)}};function createLogger(enabled,prefix){if(enabled){const a=console.log.bind(console,\"%c%s\",\"color: #265BA0\",prefix);return a}else{return()=>{}}}export const debug=new Debug(false);", "import*as wasi from\"./wasi_defs.js\";import{debug}from\"./debug.js\";export class WASIProcExit extends Error{constructor(code){super(\"exit with exit code \"+code);this.code=code}}let WASI=class WASI{start(instance){this.inst=instance;try{instance.exports._start();return 0}catch(e){if(e instanceof WASIProcExit){return e.code}else{throw e}}}initialize(instance){this.inst=instance;if(instance.exports._initialize){instance.exports._initialize()}}constructor(args,env,fds,options={}){this.args=[];this.env=[];this.fds=[];debug.enable(options.debug);this.args=args;this.env=env;this.fds=fds;const self=this;this.wasiImport={args_sizes_get(argc,argv_buf_size){const buffer=new DataView(self.inst.exports.memory.buffer);buffer.setUint32(argc,self.args.length,true);let buf_size=0;for(const arg of self.args){buf_size+=arg.length+1}buffer.setUint32(argv_buf_size,buf_size,true);debug.log(buffer.getUint32(argc,true),buffer.getUint32(argv_buf_size,true));return 0},args_get(argv,argv_buf){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);const orig_argv_buf=argv_buf;for(let i=0;i<self.args.length;i++){buffer.setUint32(argv,argv_buf,true);argv+=4;const arg=new TextEncoder().encode(self.args[i]);buffer8.set(arg,argv_buf);buffer.setUint8(argv_buf+arg.length,0);argv_buf+=arg.length+1}if(debug.enabled){debug.log(new TextDecoder(\"utf-8\").decode(buffer8.slice(orig_argv_buf,argv_buf)))}return 0},environ_sizes_get(environ_count,environ_size){const buffer=new DataView(self.inst.exports.memory.buffer);buffer.setUint32(environ_count,self.env.length,true);let buf_size=0;for(const environ of self.env){buf_size+=environ.length+1}buffer.setUint32(environ_size,buf_size,true);debug.log(buffer.getUint32(environ_count,true),buffer.getUint32(environ_size,true));return 0},environ_get(environ,environ_buf){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);const orig_environ_buf=environ_buf;for(let i=0;i<self.env.length;i++){buffer.setUint32(environ,environ_buf,true);environ+=4;const e=new TextEncoder().encode(self.env[i]);buffer8.set(e,environ_buf);buffer.setUint8(environ_buf+e.length,0);environ_buf+=e.length+1}if(debug.enabled){debug.log(new TextDecoder(\"utf-8\").decode(buffer8.slice(orig_environ_buf,environ_buf)))}return 0},clock_res_get(id,res_ptr){let resolutionValue;switch(id){case wasi.CLOCKID_MONOTONIC:{resolutionValue=5000n;break}case wasi.CLOCKID_REALTIME:{resolutionValue=1000000n;break}default:return wasi.ERRNO_NOSYS}const view=new DataView(self.inst.exports.memory.buffer);view.setBigUint64(res_ptr,resolutionValue,true);return wasi.ERRNO_SUCCESS},clock_time_get(id,precision,time){const buffer=new DataView(self.inst.exports.memory.buffer);if(id===wasi.CLOCKID_REALTIME){buffer.setBigUint64(time,BigInt(new Date().getTime())*1000000n,true)}else if(id==wasi.CLOCKID_MONOTONIC){let monotonic_time;try{monotonic_time=BigInt(Math.round(performance.now()*1e6))}catch(e){monotonic_time=0n}buffer.setBigUint64(time,monotonic_time,true)}else{buffer.setBigUint64(time,0n,true)}return 0},fd_advise(fd,offset,len,advice){if(self.fds[fd]!=undefined){return wasi.ERRNO_SUCCESS}else{return wasi.ERRNO_BADF}},fd_allocate(fd,offset,len){if(self.fds[fd]!=undefined){return self.fds[fd].fd_allocate(offset,len)}else{return wasi.ERRNO_BADF}},fd_close(fd){if(self.fds[fd]!=undefined){const ret=self.fds[fd].fd_close();self.fds[fd]=undefined;return ret}else{return wasi.ERRNO_BADF}},fd_datasync(fd){if(self.fds[fd]!=undefined){return self.fds[fd].fd_sync()}else{return wasi.ERRNO_BADF}},fd_fdstat_get(fd,fdstat_ptr){if(self.fds[fd]!=undefined){const{ret,fdstat}=self.fds[fd].fd_fdstat_get();if(fdstat!=null){fdstat.write_bytes(new DataView(self.inst.exports.memory.buffer),fdstat_ptr)}return ret}else{return wasi.ERRNO_BADF}},fd_fdstat_set_flags(fd,flags){if(self.fds[fd]!=undefined){return self.fds[fd].fd_fdstat_set_flags(flags)}else{return wasi.ERRNO_BADF}},fd_fdstat_set_rights(fd,fs_rights_base,fs_rights_inheriting){if(self.fds[fd]!=undefined){return self.fds[fd].fd_fdstat_set_rights(fs_rights_base,fs_rights_inheriting)}else{return wasi.ERRNO_BADF}},fd_filestat_get(fd,filestat_ptr){if(self.fds[fd]!=undefined){const{ret,filestat}=self.fds[fd].fd_filestat_get();if(filestat!=null){filestat.write_bytes(new DataView(self.inst.exports.memory.buffer),filestat_ptr)}return ret}else{return wasi.ERRNO_BADF}},fd_filestat_set_size(fd,size){if(self.fds[fd]!=undefined){return self.fds[fd].fd_filestat_set_size(size)}else{return wasi.ERRNO_BADF}},fd_filestat_set_times(fd,atim,mtim,fst_flags){if(self.fds[fd]!=undefined){return self.fds[fd].fd_filestat_set_times(atim,mtim,fst_flags)}else{return wasi.ERRNO_BADF}},fd_pread(fd,iovs_ptr,iovs_len,offset,nread_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const iovecs=wasi.Iovec.read_bytes_array(buffer,iovs_ptr,iovs_len);let nread=0;for(const iovec of iovecs){const{ret,data}=self.fds[fd].fd_pread(iovec.buf_len,offset);if(ret!=wasi.ERRNO_SUCCESS){buffer.setUint32(nread_ptr,nread,true);return ret}buffer8.set(data,iovec.buf);nread+=data.length;offset+=BigInt(data.length);if(data.length!=iovec.buf_len){break}}buffer.setUint32(nread_ptr,nread,true);return wasi.ERRNO_SUCCESS}else{return wasi.ERRNO_BADF}},fd_prestat_get(fd,buf_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const{ret,prestat}=self.fds[fd].fd_prestat_get();if(prestat!=null){prestat.write_bytes(buffer,buf_ptr)}return ret}else{return wasi.ERRNO_BADF}},fd_prestat_dir_name(fd,path_ptr,path_len){if(self.fds[fd]!=undefined){const{ret,prestat}=self.fds[fd].fd_prestat_get();if(prestat==null){return ret}const prestat_dir_name=prestat.inner.pr_name;const buffer8=new Uint8Array(self.inst.exports.memory.buffer);buffer8.set(prestat_dir_name.slice(0,path_len),path_ptr);return prestat_dir_name.byteLength>path_len?wasi.ERRNO_NAMETOOLONG:wasi.ERRNO_SUCCESS}else{return wasi.ERRNO_BADF}},fd_pwrite(fd,iovs_ptr,iovs_len,offset,nwritten_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const iovecs=wasi.Ciovec.read_bytes_array(buffer,iovs_ptr,iovs_len);let nwritten=0;for(const iovec of iovecs){const data=buffer8.slice(iovec.buf,iovec.buf+iovec.buf_len);const{ret,nwritten:nwritten_part}=self.fds[fd].fd_pwrite(data,offset);if(ret!=wasi.ERRNO_SUCCESS){buffer.setUint32(nwritten_ptr,nwritten,true);return ret}nwritten+=nwritten_part;offset+=BigInt(nwritten_part);if(nwritten_part!=data.byteLength){break}}buffer.setUint32(nwritten_ptr,nwritten,true);return wasi.ERRNO_SUCCESS}else{return wasi.ERRNO_BADF}},fd_read(fd,iovs_ptr,iovs_len,nread_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const iovecs=wasi.Iovec.read_bytes_array(buffer,iovs_ptr,iovs_len);let nread=0;for(const iovec of iovecs){const{ret,data}=self.fds[fd].fd_read(iovec.buf_len);if(ret!=wasi.ERRNO_SUCCESS){buffer.setUint32(nread_ptr,nread,true);return ret}buffer8.set(data,iovec.buf);nread+=data.length;if(data.length!=iovec.buf_len){break}}buffer.setUint32(nread_ptr,nread,true);return wasi.ERRNO_SUCCESS}else{return wasi.ERRNO_BADF}},fd_readdir(fd,buf,buf_len,cookie,bufused_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){let bufused=0;while(true){const{ret,dirent}=self.fds[fd].fd_readdir_single(cookie);if(ret!=0){buffer.setUint32(bufused_ptr,bufused,true);return ret}if(dirent==null){break}if(buf_len-bufused<dirent.head_length()){bufused=buf_len;break}const head_bytes=new ArrayBuffer(dirent.head_length());dirent.write_head_bytes(new DataView(head_bytes),0);buffer8.set(new Uint8Array(head_bytes).slice(0,Math.min(head_bytes.byteLength,buf_len-bufused)),buf);buf+=dirent.head_length();bufused+=dirent.head_length();if(buf_len-bufused<dirent.name_length()){bufused=buf_len;break}dirent.write_name_bytes(buffer8,buf,buf_len-bufused);buf+=dirent.name_length();bufused+=dirent.name_length();cookie=dirent.d_next}buffer.setUint32(bufused_ptr,bufused,true);return 0}else{return wasi.ERRNO_BADF}},fd_renumber(fd,to){if(self.fds[fd]!=undefined&&self.fds[to]!=undefined){const ret=self.fds[to].fd_close();if(ret!=0){return ret}self.fds[to]=self.fds[fd];self.fds[fd]=undefined;return 0}else{return wasi.ERRNO_BADF}},fd_seek(fd,offset,whence,offset_out_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const{ret,offset:offset_out}=self.fds[fd].fd_seek(offset,whence);buffer.setBigInt64(offset_out_ptr,offset_out,true);return ret}else{return wasi.ERRNO_BADF}},fd_sync(fd){if(self.fds[fd]!=undefined){return self.fds[fd].fd_sync()}else{return wasi.ERRNO_BADF}},fd_tell(fd,offset_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const{ret,offset}=self.fds[fd].fd_tell();buffer.setBigUint64(offset_ptr,offset,true);return ret}else{return wasi.ERRNO_BADF}},fd_write(fd,iovs_ptr,iovs_len,nwritten_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const iovecs=wasi.Ciovec.read_bytes_array(buffer,iovs_ptr,iovs_len);let nwritten=0;for(const iovec of iovecs){const data=buffer8.slice(iovec.buf,iovec.buf+iovec.buf_len);const{ret,nwritten:nwritten_part}=self.fds[fd].fd_write(data);if(ret!=wasi.ERRNO_SUCCESS){buffer.setUint32(nwritten_ptr,nwritten,true);return ret}nwritten+=nwritten_part;if(nwritten_part!=data.byteLength){break}}buffer.setUint32(nwritten_ptr,nwritten,true);return wasi.ERRNO_SUCCESS}else{return wasi.ERRNO_BADF}},path_create_directory(fd,path_ptr,path_len){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const path=new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr,path_ptr+path_len));return self.fds[fd].path_create_directory(path)}else{return wasi.ERRNO_BADF}},path_filestat_get(fd,flags,path_ptr,path_len,filestat_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const path=new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr,path_ptr+path_len));const{ret,filestat}=self.fds[fd].path_filestat_get(flags,path);if(filestat!=null){filestat.write_bytes(buffer,filestat_ptr)}return ret}else{return wasi.ERRNO_BADF}},path_filestat_set_times(fd,flags,path_ptr,path_len,atim,mtim,fst_flags){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const path=new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr,path_ptr+path_len));return self.fds[fd].path_filestat_set_times(flags,path,atim,mtim,fst_flags)}else{return wasi.ERRNO_BADF}},path_link(old_fd,old_flags,old_path_ptr,old_path_len,new_fd,new_path_ptr,new_path_len){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[old_fd]!=undefined&&self.fds[new_fd]!=undefined){const old_path=new TextDecoder(\"utf-8\").decode(buffer8.slice(old_path_ptr,old_path_ptr+old_path_len));const new_path=new TextDecoder(\"utf-8\").decode(buffer8.slice(new_path_ptr,new_path_ptr+new_path_len));const{ret,inode_obj}=self.fds[old_fd].path_lookup(old_path,old_flags);if(inode_obj==null){return ret}return self.fds[new_fd].path_link(new_path,inode_obj,false)}else{return wasi.ERRNO_BADF}},path_open(fd,dirflags,path_ptr,path_len,oflags,fs_rights_base,fs_rights_inheriting,fd_flags,opened_fd_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const path=new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr,path_ptr+path_len));debug.log(path);const{ret,fd_obj}=self.fds[fd].path_open(dirflags,path,oflags,fs_rights_base,fs_rights_inheriting,fd_flags);if(ret!=0){return ret}self.fds.push(fd_obj);const opened_fd=self.fds.length-1;buffer.setUint32(opened_fd_ptr,opened_fd,true);return 0}else{return wasi.ERRNO_BADF}},path_readlink(fd,path_ptr,path_len,buf_ptr,buf_len,nread_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const path=new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr,path_ptr+path_len));debug.log(path);const{ret,data}=self.fds[fd].path_readlink(path);if(data!=null){const data_buf=new TextEncoder().encode(data);if(data_buf.length>buf_len){buffer.setUint32(nread_ptr,0,true);return wasi.ERRNO_BADF}buffer8.set(data_buf,buf_ptr);buffer.setUint32(nread_ptr,data_buf.length,true)}return ret}else{return wasi.ERRNO_BADF}},path_remove_directory(fd,path_ptr,path_len){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const path=new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr,path_ptr+path_len));return self.fds[fd].path_remove_directory(path)}else{return wasi.ERRNO_BADF}},path_rename(fd,old_path_ptr,old_path_len,new_fd,new_path_ptr,new_path_len){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined&&self.fds[new_fd]!=undefined){const old_path=new TextDecoder(\"utf-8\").decode(buffer8.slice(old_path_ptr,old_path_ptr+old_path_len));const new_path=new TextDecoder(\"utf-8\").decode(buffer8.slice(new_path_ptr,new_path_ptr+new_path_len));let{ret,inode_obj}=self.fds[fd].path_unlink(old_path);if(inode_obj==null){return ret}ret=self.fds[new_fd].path_link(new_path,inode_obj,true);if(ret!=wasi.ERRNO_SUCCESS){if(self.fds[fd].path_link(old_path,inode_obj,true)!=wasi.ERRNO_SUCCESS){throw\"path_link should always return success when relinking an inode back to the original place\"}}return ret}else{return wasi.ERRNO_BADF}},path_symlink(old_path_ptr,old_path_len,fd,new_path_ptr,new_path_len){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const old_path=new TextDecoder(\"utf-8\").decode(buffer8.slice(old_path_ptr,old_path_ptr+old_path_len));const new_path=new TextDecoder(\"utf-8\").decode(buffer8.slice(new_path_ptr,new_path_ptr+new_path_len));return wasi.ERRNO_NOTSUP}else{return wasi.ERRNO_BADF}},path_unlink_file(fd,path_ptr,path_len){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const path=new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr,path_ptr+path_len));return self.fds[fd].path_unlink_file(path)}else{return wasi.ERRNO_BADF}},poll_oneoff(in_,out,nsubscriptions){throw\"async io not supported\"},proc_exit(exit_code){throw new WASIProcExit(exit_code)},proc_raise(sig){throw\"raised signal \"+sig},sched_yield(){},random_get(buf,buf_len){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);for(let i=0;i<buf_len;i++){buffer8[buf+i]=Math.random()*256|0}},sock_recv(fd,ri_data,ri_flags){throw\"sockets not supported\"},sock_send(fd,si_data,si_flags){throw\"sockets not supported\"},sock_shutdown(fd,how){throw\"sockets not supported\"},sock_accept(fd,flags){throw\"sockets not supported\"}}}};export{WASI as default};", "import*as wasi from\"./wasi_defs.js\";export class Fd{fd_allocate(offset,len){return wasi.ERRNO_NOTSUP}fd_close(){return 0}fd_fdstat_get(){return{ret:wasi.ERRNO_NOTSUP,fdstat:null}}fd_fdstat_set_flags(flags){return wasi.ERRNO_NOTSUP}fd_fdstat_set_rights(fs_rights_base,fs_rights_inheriting){return wasi.ERRNO_NOTSUP}fd_filestat_get(){return{ret:wasi.ERRNO_NOTSUP,filestat:null}}fd_filestat_set_size(size){return wasi.ERRNO_NOTSUP}fd_filestat_set_times(atim,mtim,fst_flags){return wasi.ERRNO_NOTSUP}fd_pread(size,offset){return{ret:wasi.ERRNO_NOTSUP,data:new Uint8Array}}fd_prestat_get(){return{ret:wasi.ERRNO_NOTSUP,prestat:null}}fd_pwrite(data,offset){return{ret:wasi.ERRNO_NOTSUP,nwritten:0}}fd_read(size){return{ret:wasi.ERRNO_NOTSUP,data:new Uint8Array}}fd_readdir_single(cookie){return{ret:wasi.ERRNO_NOTSUP,dirent:null}}fd_seek(offset,whence){return{ret:wasi.ERRNO_NOTSUP,offset:0n}}fd_sync(){return 0}fd_tell(){return{ret:wasi.ERRNO_NOTSUP,offset:0n}}fd_write(data){return{ret:wasi.ERRNO_NOTSUP,nwritten:0}}path_create_directory(path){return wasi.ERRNO_NOTSUP}path_filestat_get(flags,path){return{ret:wasi.ERRNO_NOTSUP,filestat:null}}path_filestat_set_times(flags,path,atim,mtim,fst_flags){return wasi.ERRNO_NOTSUP}path_link(path,inode,allow_dir){return wasi.ERRNO_NOTSUP}path_unlink(path){return{ret:wasi.ERRNO_NOTSUP,inode_obj:null}}path_lookup(path,dirflags){return{ret:wasi.ERRNO_NOTSUP,inode_obj:null}}path_open(dirflags,path,oflags,fs_rights_base,fs_rights_inheriting,fd_flags){return{ret:wasi.ERRNO_NOTDIR,fd_obj:null}}path_readlink(path){return{ret:wasi.ERRNO_NOTSUP,data:null}}path_remove_directory(path){return wasi.ERRNO_NOTSUP}path_rename(old_path,new_fd,new_path){return wasi.ERRNO_NOTSUP}path_unlink_file(path){return wasi.ERRNO_NOTSUP}}export class Inode{}", "import{debug}from\"./debug.js\";import*as wasi from\"./wasi_defs.js\";import{Fd,Inode}from\"./fd.js\";export class OpenFile extends Fd{fd_allocate(offset,len){if(this.file.size>offset+len){}else{const new_data=new Uint8Array(Number(offset+len));new_data.set(this.file.data,0);this.file.data=new_data}return wasi.ERRNO_SUCCESS}fd_fdstat_get(){return{ret:0,fdstat:new wasi.Fdstat(wasi.FILETYPE_REGULAR_FILE,0)}}fd_filestat_set_size(size){if(this.file.size>size){this.file.data=new Uint8Array(this.file.data.buffer.slice(0,Number(size)))}else{const new_data=new Uint8Array(Number(size));new_data.set(this.file.data,0);this.file.data=new_data}return wasi.ERRNO_SUCCESS}fd_read(size){const slice=this.file.data.slice(Number(this.file_pos),Number(this.file_pos+BigInt(size)));this.file_pos+=BigInt(slice.length);return{ret:0,data:slice}}fd_pread(size,offset){const slice=this.file.data.slice(Number(offset),Number(offset+BigInt(size)));return{ret:0,data:slice}}fd_seek(offset,whence){let calculated_offset;switch(whence){case wasi.WHENCE_SET:calculated_offset=offset;break;case wasi.WHENCE_CUR:calculated_offset=this.file_pos+offset;break;case wasi.WHENCE_END:calculated_offset=BigInt(this.file.data.byteLength)+offset;break;default:return{ret:wasi.ERRNO_INVAL,offset:0n}}if(calculated_offset<0){return{ret:wasi.ERRNO_INVAL,offset:0n}}this.file_pos=calculated_offset;return{ret:0,offset:this.file_pos}}fd_tell(){return{ret:0,offset:this.file_pos}}fd_write(data){if(this.file.readonly)return{ret:wasi.ERRNO_BADF,nwritten:0};if(this.file_pos+BigInt(data.byteLength)>this.file.size){const old=this.file.data;this.file.data=new Uint8Array(Number(this.file_pos+BigInt(data.byteLength)));this.file.data.set(old)}this.file.data.set(data,Number(this.file_pos));this.file_pos+=BigInt(data.byteLength);return{ret:0,nwritten:data.byteLength}}fd_pwrite(data,offset){if(this.file.readonly)return{ret:wasi.ERRNO_BADF,nwritten:0};if(offset+BigInt(data.byteLength)>this.file.size){const old=this.file.data;this.file.data=new Uint8Array(Number(offset+BigInt(data.byteLength)));this.file.data.set(old)}this.file.data.set(data,Number(offset));return{ret:0,nwritten:data.byteLength}}fd_filestat_get(){return{ret:0,filestat:this.file.stat()}}constructor(file){super();this.file_pos=0n;this.file=file}}export class OpenDirectory extends Fd{fd_seek(offset,whence){return{ret:wasi.ERRNO_BADF,offset:0n}}fd_tell(){return{ret:wasi.ERRNO_BADF,offset:0n}}fd_allocate(offset,len){return wasi.ERRNO_BADF}fd_fdstat_get(){return{ret:0,fdstat:new wasi.Fdstat(wasi.FILETYPE_DIRECTORY,0)}}fd_readdir_single(cookie){if(debug.enabled){debug.log(\"readdir_single\",cookie);debug.log(cookie,this.dir.contents.keys())}if(cookie==0n){return{ret:wasi.ERRNO_SUCCESS,dirent:new wasi.Dirent(1n,\".\",wasi.FILETYPE_DIRECTORY)}}else if(cookie==1n){return{ret:wasi.ERRNO_SUCCESS,dirent:new wasi.Dirent(2n,\"..\",wasi.FILETYPE_DIRECTORY)}}if(cookie>=BigInt(this.dir.contents.size)+2n){return{ret:0,dirent:null}}const[name,entry]=Array.from(this.dir.contents.entries())[Number(cookie-2n)];return{ret:0,dirent:new wasi.Dirent(cookie+1n,name,entry.stat().filetype)}}path_filestat_get(flags,path_str){const{ret:path_err,path}=Path.from(path_str);if(path==null){return{ret:path_err,filestat:null}}const{ret,entry}=this.dir.get_entry_for_path(path);if(entry==null){return{ret,filestat:null}}return{ret:0,filestat:entry.stat()}}path_lookup(path_str,dirflags){const{ret:path_ret,path}=Path.from(path_str);if(path==null){return{ret:path_ret,inode_obj:null}}const{ret,entry}=this.dir.get_entry_for_path(path);if(entry==null){return{ret,inode_obj:null}}return{ret:wasi.ERRNO_SUCCESS,inode_obj:entry}}path_open(dirflags,path_str,oflags,fs_rights_base,fs_rights_inheriting,fd_flags){const{ret:path_ret,path}=Path.from(path_str);if(path==null){return{ret:path_ret,fd_obj:null}}let{ret,entry}=this.dir.get_entry_for_path(path);if(entry==null){if(ret!=wasi.ERRNO_NOENT){return{ret,fd_obj:null}}if((oflags&wasi.OFLAGS_CREAT)==wasi.OFLAGS_CREAT){const{ret,entry:new_entry}=this.dir.create_entry_for_path(path_str,(oflags&wasi.OFLAGS_DIRECTORY)==wasi.OFLAGS_DIRECTORY);if(new_entry==null){return{ret,fd_obj:null}}entry=new_entry}else{return{ret:wasi.ERRNO_NOENT,fd_obj:null}}}else if((oflags&wasi.OFLAGS_EXCL)==wasi.OFLAGS_EXCL){return{ret:wasi.ERRNO_EXIST,fd_obj:null}}if((oflags&wasi.OFLAGS_DIRECTORY)==wasi.OFLAGS_DIRECTORY&&entry.stat().filetype!==wasi.FILETYPE_DIRECTORY){return{ret:wasi.ERRNO_NOTDIR,fd_obj:null}}return entry.path_open(oflags,fs_rights_base,fd_flags)}path_create_directory(path){return this.path_open(0,path,wasi.OFLAGS_CREAT|wasi.OFLAGS_DIRECTORY,0n,0n,0).ret}path_link(path_str,inode,allow_dir){const{ret:path_ret,path}=Path.from(path_str);if(path==null){return path_ret}if(path.is_dir){return wasi.ERRNO_NOENT}const{ret:parent_ret,parent_entry,filename,entry}=this.dir.get_parent_dir_and_entry_for_path(path,true);if(parent_entry==null||filename==null){return parent_ret}if(entry!=null){const source_is_dir=inode.stat().filetype==wasi.FILETYPE_DIRECTORY;const target_is_dir=entry.stat().filetype==wasi.FILETYPE_DIRECTORY;if(source_is_dir&&target_is_dir){if(allow_dir&&entry instanceof Directory){if(entry.contents.size==0){}else{return wasi.ERRNO_NOTEMPTY}}else{return wasi.ERRNO_EXIST}}else if(source_is_dir&&!target_is_dir){return wasi.ERRNO_NOTDIR}else if(!source_is_dir&&target_is_dir){return wasi.ERRNO_ISDIR}else if(inode.stat().filetype==wasi.FILETYPE_REGULAR_FILE&&entry.stat().filetype==wasi.FILETYPE_REGULAR_FILE){}else{return wasi.ERRNO_EXIST}}if(!allow_dir&&inode.stat().filetype==wasi.FILETYPE_DIRECTORY){return wasi.ERRNO_PERM}parent_entry.contents.set(filename,inode);return wasi.ERRNO_SUCCESS}path_unlink(path_str){const{ret:path_ret,path}=Path.from(path_str);if(path==null){return{ret:path_ret,inode_obj:null}}const{ret:parent_ret,parent_entry,filename,entry}=this.dir.get_parent_dir_and_entry_for_path(path,true);if(parent_entry==null||filename==null){return{ret:parent_ret,inode_obj:null}}if(entry==null){return{ret:wasi.ERRNO_NOENT,inode_obj:null}}parent_entry.contents.delete(filename);return{ret:wasi.ERRNO_SUCCESS,inode_obj:entry}}path_unlink_file(path_str){const{ret:path_ret,path}=Path.from(path_str);if(path==null){return path_ret}const{ret:parent_ret,parent_entry,filename,entry}=this.dir.get_parent_dir_and_entry_for_path(path,false);if(parent_entry==null||filename==null||entry==null){return parent_ret}if(entry.stat().filetype===wasi.FILETYPE_DIRECTORY){return wasi.ERRNO_ISDIR}parent_entry.contents.delete(filename);return wasi.ERRNO_SUCCESS}path_remove_directory(path_str){const{ret:path_ret,path}=Path.from(path_str);if(path==null){return path_ret}const{ret:parent_ret,parent_entry,filename,entry}=this.dir.get_parent_dir_and_entry_for_path(path,false);if(parent_entry==null||filename==null||entry==null){return parent_ret}if(!(entry instanceof Directory)||entry.stat().filetype!==wasi.FILETYPE_DIRECTORY){return wasi.ERRNO_NOTDIR}if(entry.contents.size!==0){return wasi.ERRNO_NOTEMPTY}if(!parent_entry.contents.delete(filename)){return wasi.ERRNO_NOENT}return wasi.ERRNO_SUCCESS}fd_filestat_get(){return{ret:0,filestat:this.dir.stat()}}fd_filestat_set_size(size){return wasi.ERRNO_BADF}fd_read(size){return{ret:wasi.ERRNO_BADF,data:new Uint8Array}}fd_pread(size,offset){return{ret:wasi.ERRNO_BADF,data:new Uint8Array}}fd_write(data){return{ret:wasi.ERRNO_BADF,nwritten:0}}fd_pwrite(data,offset){return{ret:wasi.ERRNO_BADF,nwritten:0}}constructor(dir){super();this.dir=dir}}export class PreopenDirectory extends OpenDirectory{fd_prestat_get(){return{ret:0,prestat:wasi.Prestat.dir(this.prestat_name)}}constructor(name,contents){super(new Directory(contents));this.prestat_name=name}}export class File extends Inode{path_open(oflags,fs_rights_base,fd_flags){if(this.readonly&&(fs_rights_base&BigInt(wasi.RIGHTS_FD_WRITE))==BigInt(wasi.RIGHTS_FD_WRITE)){return{ret:wasi.ERRNO_PERM,fd_obj:null}}if((oflags&wasi.OFLAGS_TRUNC)==wasi.OFLAGS_TRUNC){if(this.readonly)return{ret:wasi.ERRNO_PERM,fd_obj:null};this.data=new Uint8Array([])}const file=new OpenFile(this);if(fd_flags&wasi.FDFLAGS_APPEND)file.fd_seek(0n,wasi.WHENCE_END);return{ret:wasi.ERRNO_SUCCESS,fd_obj:file}}get size(){return BigInt(this.data.byteLength)}stat(){return new wasi.Filestat(wasi.FILETYPE_REGULAR_FILE,this.size)}constructor(data,options){super();this.data=new Uint8Array(data);this.readonly=!!options?.readonly}}let Path=class Path{static from(path){const self=new Path;self.is_dir=path.endsWith(\"/\");if(path.startsWith(\"/\")){return{ret:wasi.ERRNO_NOTCAPABLE,path:null}}if(path.includes(\"\\x00\")){return{ret:wasi.ERRNO_INVAL,path:null}}for(const component of path.split(\"/\")){if(component===\"\"||component===\".\"){continue}if(component===\"..\"){if(self.parts.pop()==undefined){return{ret:wasi.ERRNO_NOTCAPABLE,path:null}}continue}self.parts.push(component)}return{ret:wasi.ERRNO_SUCCESS,path:self}}to_path_string(){let s=this.parts.join(\"/\");if(this.is_dir){s+=\"/\"}return s}constructor(){this.parts=[];this.is_dir=false}};export class Directory extends Inode{path_open(oflags,fs_rights_base,fd_flags){return{ret:wasi.ERRNO_SUCCESS,fd_obj:new OpenDirectory(this)}}stat(){return new wasi.Filestat(wasi.FILETYPE_DIRECTORY,0n)}get_entry_for_path(path){let entry=this;for(const component of path.parts){if(!(entry instanceof Directory)){return{ret:wasi.ERRNO_NOTDIR,entry:null}}const child=entry.contents.get(component);if(child!==undefined){entry=child}else{debug.log(component);return{ret:wasi.ERRNO_NOENT,entry:null}}}if(path.is_dir){if(entry.stat().filetype!=wasi.FILETYPE_DIRECTORY){return{ret:wasi.ERRNO_NOTDIR,entry:null}}}return{ret:wasi.ERRNO_SUCCESS,entry}}get_parent_dir_and_entry_for_path(path,allow_undefined){const filename=path.parts.pop();if(filename===undefined){return{ret:wasi.ERRNO_INVAL,parent_entry:null,filename:null,entry:null}}const{ret:entry_ret,entry:parent_entry}=this.get_entry_for_path(path);if(parent_entry==null){return{ret:entry_ret,parent_entry:null,filename:null,entry:null}}if(!(parent_entry instanceof Directory)){return{ret:wasi.ERRNO_NOTDIR,parent_entry:null,filename:null,entry:null}}const entry=parent_entry.contents.get(filename);if(entry===undefined){if(!allow_undefined){return{ret:wasi.ERRNO_NOENT,parent_entry:null,filename:null,entry:null}}else{return{ret:wasi.ERRNO_SUCCESS,parent_entry,filename,entry:null}}}if(path.is_dir){if(entry.stat().filetype!=wasi.FILETYPE_DIRECTORY){return{ret:wasi.ERRNO_NOTDIR,parent_entry:null,filename:null,entry:null}}}return{ret:wasi.ERRNO_SUCCESS,parent_entry,filename,entry}}create_entry_for_path(path_str,is_dir){const{ret:path_ret,path}=Path.from(path_str);if(path==null){return{ret:path_ret,entry:null}}let{ret:parent_ret,parent_entry,filename,entry}=this.get_parent_dir_and_entry_for_path(path,true);if(parent_entry==null||filename==null){return{ret:parent_ret,entry:null}}if(entry!=null){return{ret:wasi.ERRNO_EXIST,entry:null}}debug.log(\"create\",path);let new_child;if(!is_dir){new_child=new File(new ArrayBuffer(0))}else{new_child=new Directory(new Map)}parent_entry.contents.set(filename,new_child);entry=new_child;return{ret:wasi.ERRNO_SUCCESS,entry}}constructor(contents){super();if(contents instanceof Array){this.contents=new Map(contents)}else{this.contents=contents}}}export class ConsoleStdout extends Fd{fd_filestat_get(){const filestat=new wasi.Filestat(wasi.FILETYPE_CHARACTER_DEVICE,BigInt(0));return{ret:0,filestat}}fd_fdstat_get(){const fdstat=new wasi.Fdstat(wasi.FILETYPE_CHARACTER_DEVICE,0);fdstat.fs_rights_base=BigInt(wasi.RIGHTS_FD_WRITE);return{ret:0,fdstat}}fd_write(data){this.write(data);return{ret:0,nwritten:data.byteLength}}static lineBuffered(write){const dec=new TextDecoder(\"utf-8\",{fatal:false});let line_buf=\"\";return new ConsoleStdout(buffer=>{line_buf+=dec.decode(buffer,{stream:true});const lines=line_buf.split(\"\\n\");for(const[i,line]of lines.entries()){if(i<lines.length-1){write(line)}else{line_buf=line}}})}constructor(write){super();this.write=write}}", "import { RubyVM } from \"@ruby/wasm-wasi\";\nimport {\n  File,\n  WASI,\n  OpenFile,\n  ConsoleStdout,\n  PreopenDirectory,\n} from \"@bjorn3/browser_wasi_shim\";\n\nexport const initRailsVM = async (url_or_module, opts = {}) => {\n  const progressCallback = opts.progressCallback;\n  const outputCallback = opts.outputCallback;\n  const debugOn = opts.debug || false;\n  const env = opts.env || [];\n  const isAsync = opts.async || false;\n\n  const url = typeof url_or_module === \"string\" ? url_or_module : undefined;\n\n  let module;\n\n  if (url) {\n    progressCallback?.(`Loading WebAssembly module from ${url}...`);\n    module = await WebAssembly.compileStreaming(fetch(url));\n  } else {\n    // Assuming that the url_or_module is a WebAssembly module\n    module = url_or_module;\n  }\n\n  const databaseAdapter = opts.database?.adapter || \"sqlite3_wasm\";\n\n  const storageDirPath = opts.storageDir || \"/rails/storage\";\n\n  const setStdout = function (val) {\n    console.log(val);\n    outputCallback?.(val);\n  };\n\n  const setStderr = function (val) {\n    console.warn(val);\n    outputCallback?.(val);\n  };\n\n  const emptyMap = new Map();\n  const storageDir = new PreopenDirectory(storageDirPath, emptyMap);\n  const workDir = new PreopenDirectory(\"/\", emptyMap);\n\n  const fds = [\n    new OpenFile(new File([])),\n    ConsoleStdout.lineBuffered(setStdout),\n    ConsoleStdout.lineBuffered(setStderr),\n    workDir,\n    storageDir,\n  ];\n\n  const wasi = new WASI([], env, fds, { debug: false });\n  const vm = new RubyVM();\n  const imports = {\n    wasi_snapshot_preview1: wasi.wasiImport,\n  };\n  vm.addToImports(imports);\n\n  progressCallback?.(`Instantiating WebAssembly module..`);\n\n  const instance = await WebAssembly.instantiate(module, imports);\n  await vm.setInstance(instance);\n\n  wasi.initialize(instance);\n  vm.initialize([\"app.wasm\", \"-W0\", \"-e_=0\", \"-EUTF-8\", `-r/bundle/setup`]);\n\n  const bootCode = `\n    require \"js\"\n\n    ENV[\"RAILS_ENV\"] = \"wasm\"\n    ENV[\"ACTIVE_RECORD_ADAPTER\"] = \"${databaseAdapter}\"\n\n    ENV[\"DEBUG\"] = \"1\" if ${debugOn}\n\n    if ${debugOn}\n      puts \"Initializing Rails application in debug mode...\"\n    else\n      puts \"Initializing Rails application...\"\n    end\n\n    # hack /dev/null https://github.com/ruby/ruby.wasm/issues/556\n    require \"fileutils\"\n    FileUtils.mkdir_p(\"/dev\")\n    File.write(\"/dev/null\", \"\")\n\n    require \"/rails/config/application.rb\"\n\n    Rails.application.initialize!\n\n    puts \"Rails application #{Rails.application.class.name.sub(\"::Application\", \"\")} (#{Rails::VERSION::STRING}) has been initialized\"\n  `;\n\n  if (isAsync)\n    await vm.evalAsync(bootCode);\n  else\n    vm.eval(bootCode)\n\n  return vm;\n};\n", "import setCookieParser from \"set-cookie-parser\";\n\n// An outgoing request queue to prevent concurrent requests from hitting rails.wasm.\n//\n// Based on https://github.com/kateinoigakukun/mastodon/blob/fff2e4a626a20a616c546ddf4f91766abaf1133a/pwa/src/rails.sw.js#L282\nexport class RequestQueue {\n  constructor(respond) {\n    this._respond = respond;\n    this.isProcessing = false;\n    this.queue = [];\n  }\n\n  async respond(request) {\n    if (this.isProcessing) {\n      return new Promise((resolve) => {\n        this.queue.push({ request, resolve });\n      });\n    }\n    const response = await this.process(request);\n    queueMicrotask(() => this.tick());\n    return response;\n  }\n\n  async process(request) {\n    this.isProcessing = true;\n    let response;\n    try {\n      response = await this._respond(request);\n    } catch (e) {\n      console.error(e);\n      response = new Response(`Application Error: ${e.message}`, {\n        status: 500,\n      });\n    } finally {\n      this.isProcessing = false;\n    }\n    return response;\n  }\n\n  async tick() {\n    if (this.queue.length === 0) {\n      return;\n    }\n    const { request, resolve } = this.queue.shift();\n    const response = await this.process(request);\n    resolve(response);\n    queueMicrotask(() => this.tick());\n  }\n}\n\n// We convert files from forms into data URIs and handle them via Rack DataUriUploads middleware.\nconst DATA_URI_UPLOAD_PREFIX = \"BbC14y\";\n\nconst fileToDataURI = async (file) => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      resolve(reader.result);\n    };\n\n    reader.onerror = (error) => {\n      reject(error);\n    };\n\n    reader.readAsDataURL(file);\n  });\n};\n\nconst cachedProcess = async (request, fallback) => {\n  const cachedResponse = await caches.match(request);\n  if (cachedResponse) {\n    // Add cached headers to the response, so we can track cache hits\n    const headers = new Headers(cachedResponse.headers);\n    headers.append(\"X-Cache\", \"HIT\");\n    console.log(\"[rails-web] Cache hit\", request.url);\n    return new Response(cachedResponse.body, {\n      status: cachedResponse.status,\n      statusText: cachedResponse.statusText,\n      headers,\n    });\n  }\n\n  const networkResponse = await fallback(request);\n  const cacheControl = networkResponse.headers.get(\"Cache-Control\");\n\n  // Only cache if Cache-Control header doesn't indicate 'no-store' or 'no-cache'\n  if (\n    cacheControl &&\n    !cacheControl.includes(\"no-store\") &&\n    !cacheControl.includes(\"no-cache\")\n  ) {\n    // Cache everything with cache set to some days/months/more\n    const maxAgeMatch = cacheControl.match(/max-age=(\\d{5,})/);\n    if (maxAgeMatch) {\n      const cache = await caches.open(\"rails-wasm\");\n      cache.put(request, networkResponse.clone());\n    }\n  }\n\n  return networkResponse;\n};\n\nexport class RackHandler {\n  constructor(vmSetup, opts = {}) {\n    this.logger = opts.logger || console;\n    this.cache = opts.cache || true;\n    this.quiteAssets = opts.quiteAssets || true;\n    this.assumeSSL = opts.assumeSSL || false;\n    this.async = opts.async || false;\n    this.vmSetup = vmSetup;\n    // Check if cookieStore is supported\n    this.cookiesEnabled = !!globalThis.cookieStore;\n    this.queue = new RequestQueue(this.process.bind(this));\n  }\n\n  handle(request) {\n    if (!request.url.includes(\"/assets/\")) {\n      this.logger.log(\"[rails-web] Enqueue request: \", request);\n    }\n\n    if (this.cache) {\n      return cachedProcess(request, (req) => {\n        return this.queue.respond(req);\n      });\n    }\n\n    return this.queue.respond(request);\n  }\n\n  async process(request) {\n    let vm = await this.vmSetup();\n\n    const railsURL = this.assumeSSL\n      ? request.url\n      : request.url.replace(\"https://\", \"http://\");\n    const railsHeaders = {};\n\n    for (const [key, value] of request.headers.entries()) {\n      railsHeaders[`HTTP_${key.toUpperCase().replaceAll(\"-\", \"_\")}`] = value;\n    }\n\n    try {\n      if (this.cookiesEnabled) {\n        const cookies = await cookieStore.getAll();\n        const railsCookie = cookies\n          .map((c) => `${c.name}=${c.value}`)\n          .join(\"; \");\n\n        railsHeaders[\"HTTP_COOKIE\"] = railsCookie;\n      }\n\n      let input = null;\n\n      if (\n        request.method === \"POST\" ||\n        request.method === \"PUT\" ||\n        request.method === \"PATCH\"\n      ) {\n        const contentType = request.headers.get(\"content-type\");\n\n        // multipart inputs do not work correctly or some reason\n        // (_method is getting lost)\n        if (contentType.includes(\"multipart/form-data\")) {\n          const formData = await request.formData();\n          // Remove file/blob values from FormData\n          for (const [key, value] of formData.entries()) {\n            if (value instanceof File) {\n              try {\n                const dataURI = await fileToDataURI(value);\n                formData.set(key, DATA_URI_UPLOAD_PREFIX + dataURI);\n              } catch (e) {\n                console.warn(\n                  `[rails-wasm] Failed to convert file into data URI: ${e.message}. Ignoring file form input ${key}`,\n                );\n                formData.delete(key);\n              }\n            }\n          }\n\n          input = new URLSearchParams(formData).toString();\n        } else {\n          input = await request.text();\n        }\n      }\n\n      if (!railsURL.includes(\"/assets/\")) {\n        this.logger.log(\"[rails-web] Rails request\", {\n          url: railsURL,\n          headers: railsHeaders,\n          input: !!input,\n        });\n      }\n\n      const command = `\n        has_input = ${!!input}\n        request = Rack::MockRequest.env_for(\n          \"${railsURL}\",\n          JSON.parse(%q[${JSON.stringify(railsHeaders)}]).merge(\n            method: :${request.method}\n          ).tap do\n            _1.merge!(input: %q[${input}]) if has_input\n          end\n        )\n\n        response = Rack::Response[*Rails.application.call(request)]\n        status, headers, bodyiter = *response.finish\n\n        body = \"\"\n        body_is_set = false\n\n        bodyiter.each do |part|\n          body += part\n          body_is_set = true\n        end\n\n        # Serve images as base64 from Ruby and decode back in JS\n        if headers[\"Content-Type\"]&.start_with?(\"image/\")\n          body = Base64.strict_encode64(body)\n        end\n\n        {\n          status: status,\n          headers: headers,\n          body: body_is_set ? body : nil\n        }\n      `;\n\n      let res;\n\n      if (this.async) {\n        const proc = vm.eval(`proc do\\n${command}\\nend`);\n        res = await proc.callAsync(\"call\");\n        // const retVal = await vm.evalAsync(command);\n        // res = retVal.toJS();\n      } else {\n        res = vm.eval(command).toJS();\n      }\n\n      if (!railsURL.includes(\"/assets/\")) {\n        this.logger.log(\"[rails-web] Rails response\", res);\n      }\n\n      let { status, headers, body } = res;\n\n      if (this.cookiesEnabled) {\n        const cookie = headers[\"set-cookie\"];\n\n        if (cookie) {\n          const cookies = setCookieParser.parse(cookie, {\n            decodeValues: false,\n          });\n          cookies.forEach(async (c) => {\n            await cookieStore.set({\n              name: c.name,\n              value: c.value,\n              domain: c.domain,\n              path: c.path,\n              expires: c.expires,\n              sameSite: c.sameSite.toLowerCase(),\n            });\n          });\n        }\n      }\n\n      // Convert image into a blob\n      if (headers[\"content-type\"]?.startsWith(\"image/\")) {\n        this.logger.log(\n          \"[rails-web]\",\n          `Converting ${headers[\"content-type\"]} image into blob`,\n        );\n\n        body = await fetch(\n          `data:${headers[\"content-type\"]};base64,${body}`,\n        ).then((res) => res.blob());\n      }\n\n      const resp = new Response(body, {\n        headers,\n        status,\n      });\n\n      if (!railsURL.includes(\"/assets/\")) {\n        this.logger.log(\"[rails-web] Response:\", resp);\n      }\n\n      return resp;\n    } catch (e) {\n      this.logger.error(e);\n      return new Response(`Application Error: ${e.message}`, {\n        status: 500,\n      });\n    }\n  }\n}\n", "export function registerSQLiteWasmInterface(worker, db, opts = {}) {\n  const name = opts.name || \"sqlite4rails\";\n\n  worker[name] = {\n    exec: function (sql) {\n      let cols = [];\n      let rows = db.exec(sql, { columnNames: cols, returnValue: \"resultRows\" });\n\n      return {\n        cols,\n        rows,\n      };\n    },\n\n    changes: function () {\n      return db.changes();\n    },\n  };\n}\n\nexport const registerPGliteWasmInterface = (worker, db, opts = {}) => {\n  const name = opts.name || \"pglite4rails\";\n\n  worker[name] = {\n    async query(sql, params) {\n      return db.query(sql, params);\n    }\n  };\n}\n"],
  "mappings": "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",
  "names": ["value", "cookies", "ruby_tag_type", "e", "Debug", "WASI", "ret", "File", "Path", "File", "setCookieParser", "res"]
}
